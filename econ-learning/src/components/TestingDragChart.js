import React from 'react';
import { Line } from 'react-chartjs-2';
import './ChartSample.css';
import { create, all } from 'mathjs';
//import 'child_process';
const math = create(all)

const options = {
    title: {
        display: true,
        text: 'Stock price',
        fontSize: 20
    },
    legend: {
        display: true,
        position: 'right'
    },
    tooltips: { enabled: true },
    scales: {
        xAxes: [{
            gridLines: { dispaly: false, color: '#9B9B9B', },
            ticks: { fontColor: '#9B9B9B', fontSize: 14, },
        }],
        yAxes: [{
            scaleLabel: { display: false },
            ticks: {
                display: true,
                min: 30,
                max: 85,
                scaleSteps: 50,
                scaleStartValue: -50,
                maxTicksLimit: 8,
                fontColor: '#9B9B9B',
                padding: 0,
                callback: point => (point < 0 ? '' : point),
            }
        }],
    },
    //dragData: true,
    //onDragStart: function (e) {
    //    console.log(e)
    //},
    //onDrag: function (e, datasetIndex, index, value) {
    //    console.log(datasetIndex, index, value)
    //},
    //onDragEnd: function (e, datasetIndex, index, value) {
    //    console.log(datasetIndex, index, value)
    //},
    maintainAspectRatio: false,
    responsive: true
};

var fiveLabel = {
    labels: [
        '1 / 3 / 2017',
        '1 / 4 / 2017',
        '1 / 5 / 2017',
        '1 / 6 / 2017',
        '1 / 9 / 2017',
        '1 / 10 / 2017',
        '1 / 11 / 2017',
        '1 / 12 / 2017',
        '1 / 13 / 2017',
        '1 / 17 / 2017',
        '1 / 18 / 2017',
        '1 / 19 / 2017',
        '1 / 20 / 2017',
        '1 / 23 / 2017',
        '1 / 24 / 2017',
        '1 / 25 / 2017',
        '1 / 26 / 2017',
        '1 / 27 / 2017',
        '1 / 30 / 2017',
        '1 / 31 / 2017',
        '2 / 1 / 2017',
        '2 / 2 / 2017',
        '2 / 3 / 2017',
        '2 / 6 / 2017',
        '2 / 7 / 2017',
        '2 / 8 / 2017',
        '2 / 9 / 2017',
        '2 / 10 / 2017',
        '2 / 13 / 2017',
        '2 / 14 / 2017',
        '2 / 15 / 2017',
        '2 / 16 / 2017',
        '2 / 17 / 2017',
        '2 / 21 / 2017',
        '2 / 22 / 2017',
        '2 / 23 / 2017',
        '2 / 24 / 2017',
        '2 / 27 / 2017',
        '2 / 28 / 2017',
        '3 / 1 / 2017',
        '3 / 2 / 2017',
        '3 / 3 / 2017',
        '3 / 6 / 2017',
        '3 / 7 / 2017',
        '3 / 8 / 2017',
        '3 / 9 / 2017',
        '3 / 10 / 2017',
        '3 / 13 / 2017',
        '3 / 14 / 2017',
        '3 / 15 / 2017',
        '3 / 16 / 2017',
        '3 / 17 / 2017',
        '3 / 20 / 2017',
        '3 / 21 / 2017',
        '3 / 22 / 2017',
        '3 / 23 / 2017',
        '3 / 24 / 2017',
        '3 / 27 / 2017',
        '3 / 28 / 2017',
        '3 / 29 / 2017',
        '3 / 30 / 2017',
        '3 / 31 / 2017',
        '4 / 3 / 2017',
        '4 / 4 / 2017',
        '4 / 5 / 2017',
        '4 / 6 / 2017',
        '4 / 7 / 2017',
        '4 / 10 / 2017',
        '4 / 11 / 2017',
        '4 / 12 / 2017',
        '4 / 13 / 2017',
        '4 / 17 / 2017',
        '4 / 18 / 2017',
        '4 / 19 / 2017',
        '4 / 20 / 2017',
        '4 / 21 / 2017',
        '4 / 24 / 2017',
        '4 / 25 / 2017',
        '4 / 26 / 2017',
        '4 / 27 / 2017',
        '4 / 28 / 2017',
        '5 / 1 / 2017',
        '5 / 2 / 2017',
        '5 / 3 / 2017',
        '5 / 4 / 2017',
        '5 / 5 / 2017',
        '5 / 8 / 2017',
        '5 / 9 / 2017',
        '5 / 10 / 2017',
        '5 / 11 / 2017',
        '5 / 12 / 2017',
        '5 / 15 / 2017',
        '5 / 16 / 2017',
        '5 / 17 / 2017',
        '5 / 18 / 2017',
        '5 / 19 / 2017',
        '5 / 22 / 2017',
        '5 / 23 / 2017',
        '5 / 24 / 2017',
        '5 / 25 / 2017',
        '5 / 26 / 2017',
        '5 / 30 / 2017',
        '5 / 31 / 2017',
        '6 / 1 / 2017',
        '6 / 2 / 2017',
        '6 / 5 / 2017',
        '6 / 6 / 2017',
        '6 / 7 / 2017',
        '6 / 8 / 2017',
        '6 / 9 / 2017',
        '6 / 12 / 2017',
        '6 / 13 / 2017',
        '6 / 14 / 2017',
        '6 / 15 / 2017',
        '6 / 16 / 2017',
        '6 / 19 / 2017',
        '6 / 20 / 2017',
        '6 / 21 / 2017',
        '6 / 22 / 2017',
        '6 / 23 / 2017',
        '6 / 26 / 2017',
        '6 / 27 / 2017',
        '6 / 28 / 2017',
        '6 / 29 / 2017',
        '6 / 30 / 2017',
        '7 / 3 / 2017',
        '7 / 5 / 2017',
        '7 / 6 / 2017',
        '7 / 7 / 2017',
        '7 / 10 / 2017',
        '7 / 11 / 2017',
        '7 / 12 / 2017',
        '7 / 13 / 2017',
        '7 / 14 / 2017',
        '7 / 17 / 2017',
        '7 / 18 / 2017',
        '7 / 19 / 2017',
        '7 / 20 / 2017',
        '7 / 21 / 2017',
        '7 / 24 / 2017',
        '7 / 25 / 2017',
        '7 / 26 / 2017',
        '7 / 27 / 2017',
        '7 / 28 / 2017',
        '7 / 31 / 2017',
        '8 / 1 / 2017',
        '8 / 2 / 2017',
        '8 / 3 / 2017',
        '8 / 4 / 2017',
        '8 / 7 / 2017',
        '8 / 8 / 2017',
        '8 / 9 / 2017',
        '8 / 10 / 2017',
        '8 / 11 / 2017',
        '8 / 14 / 2017',
        '8 / 15 / 2017',
        '8 / 16 / 2017',
        '8 / 17 / 2017',
        '8 / 18 / 2017',
        '8 / 21 / 2017',
        '8 / 22 / 2017',
        '8 / 23 / 2017',
        '8 / 24 / 2017',
        '8 / 25 / 2017',
        '8 / 28 / 2017',
        '8 / 29 / 2017',
        '8 / 30 / 2017',
        '8 / 31 / 2017',
        '9 / 1 / 2017',
        '9 / 5 / 2017',
        '9 / 6 / 2017',
        '9 / 7 / 2017',
        '9 / 8 / 2017',
        '9 / 11 / 2017',
        '9 / 12 / 2017',
        '9 / 13 / 2017',
        '9 / 14 / 2017',
        '9 / 15 / 2017',
        '9 / 18 / 2017',
        '9 / 19 / 2017',
        '9 / 20 / 2017',
        '9 / 21 / 2017',
        '9 / 22 / 2017',
        '9 / 25 / 2017',
        '9 / 26 / 2017',
        '9 / 27 / 2017',
        '9 / 28 / 2017',
        '9 / 29 / 2017',
        '10 / 2 / 2017',
        '10 / 3 / 2017',
        '10 / 4 / 2017',
        '10 / 5 / 2017',
        '10 / 6 / 2017',
        '10 / 9 / 2017',
        '10 / 10 / 2017',
        '10 / 11 / 2017',
        '10 / 12 / 2017',
        '10 / 13 / 2017',
        '10 / 16 / 2017',
        '10 / 17 / 2017',
        '10 / 18 / 2017',
        '10 / 19 / 2017',
        '10 / 20 / 2017',
        '10 / 23 / 2017',
        '10 / 24 / 2017',
        '10 / 25 / 2017',
        '10 / 26 / 2017',
        '10 / 27 / 2017',
        '10 / 30 / 2017',
        '10 / 31 / 2017',
        '11 / 1 / 2017',
        '11 / 2 / 2017',
        '11 / 3 / 2017',
        '11 / 6 / 2017',
        '11 / 7 / 2017',
        '11 / 8 / 2017',
        '11 / 9 / 2017',
        '11 / 10 / 2017',
        '11 / 13 / 2017',
        '11 / 14 / 2017',
        '11 / 15 / 2017',
        '11 / 16 / 2017',
        '11 / 17 / 2017',
        '11 / 20 / 2017',
        '11 / 21 / 2017',
        '11 / 22 / 2017',
        '11 / 24 / 2017',
        '11 / 27 / 2017',
        '11 / 28 / 2017',
        '11 / 29 / 2017',
        '11 / 30 / 2017',
        '12 / 1 / 2017',
        '12 / 4 / 2017',
        '12 / 5 / 2017',
        '12 / 6 / 2017',
        '12 / 7 / 2017',
        '12 / 8 / 2017',
        '12 / 11 / 2017',
        '12 / 12 / 2017',
        '12 / 13 / 2017',
        '12 / 14 / 2017',
        '12 / 15 / 2017',
        '12 / 18 / 2017',
        '12 / 19 / 2017',
        '12 / 20 / 2017',
        '12 / 21 / 2017',
        '12 / 22 / 2017',
        '12 / 26 / 2017',
        '12 / 27 / 2017',
        '12 / 28 / 2017',
        '12 / 29 / 2017',
    ]
};

var tenLabel = {
    labels: ['January', 'February', 'March',
        'April', 'May', 'June', 'July', 'August', 'September', 'October']
};

var fifteenLabel = {
    labels: ['January', 'February', 'March',
        'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'January', 'February', 'March']
};

var fiveActual = {
    dataSet: [
        40.290001,
        40.349998,
        41.43,
        41.240002,
        41.490002,
        41.400002,
        41.23,
        41.279999,
        41.650002,
        41.599998,
        41.41,
        41.25,
        41.389999,
        41.860001,
        41.950001,
        42.360001,
        42.360001,
        41,
        40.169998,
        39.700001,
        39.959999,
        39.400002,
        39.790001,
        39.639999,
        40.009998,
        40.18,
        40.439999,
        40.82,
        40.830002,
        41.18,
        41.689999,
        41.869999,
        41.919998,
        41.93,
        42.299999,
        42.369999,
        42.110001,
        42.889999,
        42.490002,
        42.310001,
        42.400002,
        42.700001,
        42.98,
        42.799999,
        42.84,
        42.66,
        43.189999,
        42.869999,
        42.509998,
        42.290001,
        42.5,
        42.57,
        43.099998,
        43.330002,
        42.595001,
        43.130001,
        43.48,
        42.689999,
        42.869999,
        43.150002,
        43.150002,
        43.439999,
        43.200001,
        42.740002,
        42.830002,
        42.900002,
        42.889999,
        43.07,
        42.990002,
        42.099998,
        42.5,
        42.599998,
        43.200001,
        43.029999,
        43.32,
        43.860001,
        44.09,
        44.490002,
        45.040001,
        47.25,
        47.029999,
        47.389999,
        47.41,
        49.16,
        48.93,
        48.619999,
        49.43,
        49.060001,
        49.18,
        49.630001,
        49.580002,
        49.310001,
        49.630001,
        49.869999,
        49.029999,
        49.150002,
        49.450001,
        49.900002,
        50.23,
        50.77,
        51.040001,
        50.959999,
        51.130001,
        52.48,
        53.439999,
        53.77,
        53.75,
        53.299999,
        54.029999,
        54.650002,
        52.810001,
        52.290001,
        52,
        51.439999,
        52.040001,
        52.279999,
        52.84,
        52.990002,
        53.709999,
        53.82,
        54.439999,
        53.599998,
        52.75,
        53.810001,
        53.599998,
        54.139999,
        53,
        54.220001,
        53.700001,
        54.91,
        54.919998,
        56.599998,
        57.299999,
        58.139999,
        57.529999,
        57.5,
        58.310001,
        58.75,
        59,
        58.900002,
        58.73,
        58.48,
        61,
        59.799999,
        59.369999,
        59,
        59.669998,
        59.16,
        58.619999,
        59.18,
        59.610001,
        58.970001,
        59.240002,
        57.849998,
        58.610001,
        59.299999,
        59.950001,
        60.150002,
        59.360001,
        59.330002,
        59.720001,
        60.299999,
        60.220001,
        60.330002,
        60.310001,
        59.82,
        61.049999,
        62,
        61.98,
        61.259998,
        61.740002,
        61.330002,
        61.939999,
        61.73,
        62.950001,
        62.470001,
        62.040001,
        62.27,
        62.619999,
        63.009998,
        63.990002,
        64.669998,
        64.330002,
        65,
        63.709999,
        63.41,
        63.619999,
        63.860001,
        64.5,
        64.510002,
        64.300003,
        64.379997,
        66,
        66.199997,
        66.599998,
        67.25,
        68.019997,
        69.489998,
        69.040001,
        67.650002,
        67.400002,
        67.300003,
        71.330002,
        71.019997,
        69.730003,
        69.940002,
        71.459999,
        71.720001,
        71.449997,
        71.339996,
        72.779999,
        72.459999,
        72.370003,
        73.720001,
        75.169998,
        74,
        74.019997,
        73.769997,
        73.610001,
        74.099998,
        74.300003,
        75.5,
        78.010002,
        76.599998,
        77.089996,
        77.900002,
        77.809998,
        78.629997,
        77.949997,
        77.949997,
        73.769997,
        75.220001,
        75.589996,
        69.809998,
        70.889999,
        73.25,
        74.709999,
        72.959999,
        73.449997,
        74.080002,
        74.5,
        74.82,
        76.300003,
        75.389999,
        74.639999,
        74.190002,
        73.800003,
        73.290001,
        74.25,
        74.959999,
        73.919998
    ]
};

var numbers;

var MLArrayFirstGraph = [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    32,
    33,
    34,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    71,
    72,
    73,
    74,
    75,
    76,
    77,
    78,
    79,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    87,
    88,
    89,
    90,
    91,
    92,
    93,
    94,
    95,
    96,
    97,
    98,
    99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126,
    127,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    172,
    173,
    174,
    175,
    176,
    177,
    178,
    179,
    180,
    181,
    182,
    183,
    184,
    185,
    186,
    187,
    188,
    189,
    190,
    191,
    192,
    193,
    194,
    195,
    196,
    197,
    198,
    199,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    209,
    210,
    211,
    212,
    213,
    214,
    215,
    216,
    217,
    218,
    219,
    220,
    221,
    222,
    223,
    224,
    225,
    226,
    227,
    228,
    229,
    230,
    231,
    232,
    233,
    234,
    235,
    236,
    237,
    238,
    239,
    240,
    241,
    242,
    243,
    244,
    245,
    246,
    247,
    248,
    249,
    250,
    251]

var fiveMachine = {
    dataSet: findLineByLeastSquares(MLArrayFirstGraph, fiveActual.dataSet)
};

var tenActual = {
    dataSet: [65, 59, 80, 81, 56, 50, 40, 45, 55, 60]
};

var tenMachine = {
    dataSet: [15, 25, 40, 50, 49, 50, 55, 50, 55, 50]
};

var fifteenActual = {
    dataSet: [65, 59, 80, 81, 56, 50, 40, 45, 55, 60, 70, 75, 70, 62, 60]
};

var fifteenMachine = {
    dataSet: [15, 25, 40, 50, 49, 50, 55, 50, 55, 50, 68, 71, 78, 80, 75]
};

function findLineByLeastSquares(values_x, values_y) {
    var sum_x = 0;
    var sum_y = 0;
    var sum_xy = 0;
    var sum_xx = 0;
    var count = 0;

    /*
     * We'll use those variables for faster read/write access.
     */
    var x = 0;
    var y = 0;
    var values_length = values_x.length;

    if (values_length != values_y.length) {
        throw new Error('The parameters values_x and values_y need to have same size!');
    }

    /*
     * Nothing to do.
     */
    if (values_length === 0) {
        return [[], []];
    }

    /*
     * Calculate the sum for each of the parts necessary.
     */
    for (var v = 0; v < values_length; v++) {
        x = values_x[v];
        y = values_y[v];
        sum_x += x;
        sum_y += y;
        sum_xx += x * x;
        sum_xy += x * y;
        count++;
    }

    /*
     * Calculate m and b for the formular:
     * y = x * m + b
     */
    var m = (count * sum_xy - sum_x * sum_y) / (count * sum_xx - sum_x * sum_x);
    var b = (sum_y / count) - (m * sum_x) / count;

    /*
     * We will make the x and y result line now
     */
    var result_values_x = [];
    var result_values_y = [];

    for (var v = 0; v < values_length; v++) {
        x = values_x[v];
        y = x * m + b;
        result_values_x.push(x);
        result_values_y.push(y);
    }

    //console.log([result_values_y]);

    return result_values_y;
}

var matrix = [
    [34.62365962451697, 78.0246928153624, 0],
    [30.28671076822607, 43.89499752400101, 0],
    [35.84740876993872, 72.90219802708364, 0],
    [60.18259938620976, 86.30855209546826, 1],
    [79.0327360507101, 75.3443764369103, 1],
]

var X = [
    [34.62365962451697, 78.0246928153624],
    [30.28671076822607, 43.89499752400101],
    [35.84740876993872, 72.90219802708364],
    [60.18259938620976, 86.30855209546826],
    [79.0327360507101, 75.3443764369103],
]

var y = [
    [0],
    [0],
    [0],
    [1],
    [1],
]

var Xt = [
    [40.290001, 40.98, 40, 40.25, 40.25, 8247400,],
    [40.349998, 41.029999, 40.044998, 41, 41, 6806400,],
    [41.43, 41.720001, 41.040001, 41.060001, 41.060001, 6432000,],
    [41.240002, 41.639999, 40.790001, 41.450001, 41.450001, 5586400,],
    [41.490002, 41.509998, 41.110001, 41.400002, 41.400002, 3943900,],
    [41.400002, 41.549999, 41.07, 41.080002, 41.080002, 4174900,],
    [41.23, 41.380001, 40.834999, 41.279999, 41.279999, 4425300,],
    [41.279999, 41.605, 40.919998, 41.560001, 41.560001, 3840500,],
    [41.650002, 41.84, 41.529999, 41.599998, 41.599998, 3917700,],
    [41.599998, 41.709999, 41.200001, 41.27, 41.27, 5932900,],
    [41.41, 41.490002, 41.110001, 41.349998, 41.349998, 4706000,],
    [41.25, 41.68, 41.029999, 41.27, 41.27, 4717600,],
    [41.389999, 41.720001, 41.299999, 41.689999, 41.689999, 6868500,],
    [41.860001, 42.110001, 41.25, 41.619999, 41.619999, 8497100,],
    [41.950001, 42.040001, 41.529999, 41.959999, 41.959999, 6106500,],
    [42.360001, 42.439999, 41.66, 41.709999, 41.709999, 8604000,],
    [42.360001, 42.5, 41.285, 41.5, 41.5, 11838100,],
    [41, 41.200001, 39.919998, 40.27, 40.27, 22749200,],
    [40.169998, 40.27, 39.419998, 39.860001, 39.860001, 11486000,],
    [39.700001, 40.009998, 39.450001, 39.779999, 39.779999, 9100100,],
    [39.959999, 40, 39.110001, 39.310001, 39.310001, 8860400,],
    [39.400002, 39.84, 39.02, 39.580002, 39.580002, 8736800,],
    [39.790001, 39.93, 39.549999, 39.59, 39.59, 7131100,],
    [39.639999, 39.830002, 39.34, 39.740002, 39.740002, 8206400,],
    [40.009998, 40.34, 39.700001, 40.02, 40.02, 7956300,],
    [40.18, 40.990002, 39.919998, 40.880001, 40.880001, 7399000,],
    [40.439999, 40.994999, 40.299999, 40.830002, 40.830002, 6467600,],
    [40.82, 40.860001, 40.560001, 40.580002, 40.580002, 6248200,],
    [40.830002, 41.299999, 40.740002, 41.169998, 41.169998, 6260900,],
    [41.18, 41.630001, 40.939999, 41.619999, 41.619999, 6496400,],
    [41.689999, 41.93, 41.27, 41.869999, 41.869999, 7124600,],
    [41.869999, 42.310001, 41.700001, 42.150002, 42.150002, 5730800,],
    [41.919998, 42.299999, 41.799999, 41.959999, 41.959999, 5106000,],
    [41.93, 42.560001, 41.900002, 42.43, 42.43, 5874700,],
    [42.299999, 42.529999, 42.119999, 42.419998, 42.419998, 4316200,],
    [42.369999, 42.669998, 42.16, 42.529999, 42.529999, 5456300,],
    [42.110001, 43.07, 41.830002, 43.07, 43.07, 6769500,],
    [42.889999, 42.889999, 42.349998, 42.639999, 42.639999, 5026700,],
    [42.490002, 42.490002, 41.990002, 42, 42, 6956800,],
    [42.310001, 42.52, 41.990002, 42.43, 42.43, 6003800,],
    [42.400002, 42.860001, 42.200001, 42.77, 42.77, 4572300,],
    [42.700001, 43.040001, 42.580002, 43.029999, 43.029999, 4214400,],
    [42.98, 43.029999, 42.630001, 42.869999, 42.869999, 6032800,],
    [42.799999, 43.200001, 42.709999, 42.889999, 42.889999, 4404700,],
    [42.84, 43.18, 42.720001, 42.790001, 42.790001, 4573900,],
    [42.66, 43, 42.450001, 42.919998, 42.919998, 3487900,],
    [43.189999, 43.279999, 42.759998, 42.990002, 42.990002, 4636200,],
    [42.869999, 42.965, 42.450001, 42.59, 42.59, 5526900,],
    [42.509998, 42.639999, 41.740002, 42.099998, 42.099998, 5888000,],
    [42.290001, 42.57, 41.889999, 42.389999, 42.389999, 4291800,],
    [42.5, 42.580002, 42.139999, 42.400002, 42.400002, 3998600,],
    [42.57, 43.299999, 42.369999, 43.080002, 43.080002, 12307900,],
    [43.099998, 43.32, 42.810001, 43.16, 43.16, 6686900,],
    [43.330002, 43.400002, 42.459999, 42.639999, 42.639999, 7758400,],
    [42.595001, 43.240002, 42.450001, 43.189999, 43.189999, 6513300,],
    [43.130001, 43.610001, 43, 43.139999, 43.139999, 7176400,],
    [43.48, 43.494999, 42.935001, 43.130001, 43.130001, 5739500,],
    [42.689999, 43.200001, 42.580002, 43.080002, 43.080002, 3850300,],
    [42.869999, 43.25, 42.84, 43.150002, 43.150002, 4396500,],
    [43.150002, 43.299999, 42.959999, 43.240002, 43.240002, 3951100,],
    [43.150002, 43.799999, 43, 43.540001, 43.540001, 5691700,],
    [43.439999, 43.48, 43.009998, 43.02, 43.02, 5177500,],
    [43.200001, 43.299999, 42.509998, 42.630001, 42.630001, 7773000,],
    [42.740002, 42.740002, 42.259998, 42.720001, 42.720001, 4681800,],
    [42.830002, 43.342999, 42.740002, 42.889999, 42.889999, 5292300,],
    [42.900002, 43, 42.720001, 42.900002, 42.900002, 5395400,],
    [42.889999, 43.174999, 42.709999, 43.040001, 43.040001, 4861200,],
    [43.07, 43.549999, 43.009998, 43.049999, 43.049999, 4579500,],
    [42.990002, 43.09, 42.610001, 42.689999, 42.689999, 4856300,],
    [42.099998, 42.810001, 42.060001, 42.490002, 42.490002, 5800100,],
    [42.5, 42.889999, 42.32, 42.549999, 42.549999, 3631400,],
    [42.599998, 43.139999, 42.599998, 43.099998, 43.099998, 3151600,],
    [43.200001, 43.200001, 42.860001, 43.09, 43.09, 3711600,],
    [43.029999, 43.470001, 42.900002, 43.299999, 43.299999, 4913900,],
    [43.32, 43.799999, 43.259998, 43.689999, 43.689999, 4811200,],
    [43.860001, 44, 43.599998, 43.810001, 43.810001, 5595700,],
    [44.09, 44.279999, 43.950001, 44.27, 44.27, 4643800,],
    [44.490002, 45.009998, 44.349998, 44.709999, 44.709999, 7827900,],
    [45.040001, 45.040001, 44.25, 44.41, 44.41, 9846900,],
    [47.25, 48.099998, 46.75, 47.150002, 47.150002, 34420200,],
    [47.029999, 47.755001, 46.869999, 47.720001, 47.720001, 11642800,],
    [47.389999, 47.713001, 47.32, 47.540001, 47.540001, 14537500,],
    [47.41, 49.07, 47.400002, 49.049999, 49.049999, 16820800,],
    [49.16, 49.290001, 48.625, 49.02, 49.02, 11613100,],
    [48.93, 49.380001, 48.82, 48.91, 48.91, 7148800,],
    [48.619999, 49.439999, 48.400002, 49.299999, 49.299999, 4876200,],
    [49.43, 49.450001, 48.810001, 49.169998, 49.169998, 6641000,],
    [49.060001, 49.369999, 48.900002, 49.220001, 49.220001, 4774000,],
    [49.18, 49.799999, 49.014999, 49.790001, 49.790001, 6507700,],
    [49.630001, 49.709999, 49.110001, 49.700001, 49.700001, 5547700,],
    [49.580002, 49.75, 49.240002, 49.369999, 49.369999, 4933700,],
    [49.310001, 50, 49.25, 49.77, 49.77, 4705900,],
    [49.630001, 50.349998, 49.57, 50.34, 50.34, 5347200,],
    [49.869999, 50.099998, 49.025002, 49.049999, 49.049999, 6598400,],
    [49.029999, 49.580002, 48.889999, 49.110001, 49.110001, 9932100,],
    [49.150002, 49.709999, 49.060001, 49.389999, 49.389999, 7813800,],
    [49.450001, 49.880001, 49.349998, 49.77, 49.77, 13144900,],
    [49.900002, 50.18, 49.77, 50.130001, 50.130001, 7134200,],
    [50.23, 51.080002, 50.139999, 51.049999, 51.049999, 6274800,],
    [50.77, 51.130001, 50.639999, 50.93, 50.93, 4950500,],
    [51.040001, 51.389999, 50.889999, 51.189999, 51.189999, 4780800,],
    [50.959999, 51.279999, 50.860001, 51.060001, 51.060001, 5550300,],
    [51.130001, 52.240002, 50.880001, 52.209999, 52.209999, 11107200,],
    [52.48, 53.389999, 52.474998, 53.16, 53.16, 13898300,],
    [53.439999, 53.639999, 53.080002, 53.52, 53.52, 9121800,],
    [53.77, 54.07, 53.59, 53.799999, 53.799999, 9656400,],
    [53.75, 53.799999, 53.16, 53.400002, 53.400002, 6308000,],
    [53.299999, 53.939999, 53.259998, 53.849998, 53.849998, 6368700,],
    [54.029999, 54.43, 53.450001, 54.389999, 54.389999, 6369900,],
    [54.650002, 55.139999, 52.849998, 53.400002, 53.400002, 11174100,],
    [52.810001, 52.900002, 51.43, 52.16, 52.16, 15765600,],
    [52.290001, 52.485001, 51.700001, 52.060001, 52.060001, 10411800,],
    [52, 52.505001, 51.535, 51.900002, 51.900002, 7132500,],
    [51.439999, 52.380001, 50.830002, 52.290001, 52.290001, 12401600,],
    [52.040001, 52.16, 51.580002, 51.84, 51.84, 10931000,],
    [52.279999, 53, 52.110001, 52.93, 52.93, 5643900,],
    [52.84, 53.23, 52.43, 52.52, 52.52, 4578700,],
    [52.990002, 53.580002, 52.610001, 53.540001, 53.540001, 8016500,],
    [53.709999, 53.951, 52.860001, 53.869999, 53.869999, 9673000,],
    [53.82, 54.529999, 53.689999, 54.330002, 54.330002, 6257300,],
    [54.439999, 55.099998, 53.650002, 53.740002, 53.740002, 4890300,],
    [53.599998, 53.790001, 52.639999, 52.73, 52.73, 7706800,],
    [52.75, 54.439999, 52.650002, 54.389999, 54.389999, 7934300,],
    [53.810001, 54.099998, 52.52, 53.419998, 53.419998, 11616200,],
    [53.599998, 54.25, 53.290001, 53.669998, 53.669998, 8235000,],
    [54.139999, 54.330002, 52.830002, 52.869999, 52.869999, 4831300,],
    [53, 54.75, 52.939999, 54.610001, 54.610001, 9800600,],
    [54.220001, 54.351002, 53.150002, 53.470001, 53.470001, 7447900,],
    [53.700001, 54.48, 53.52, 53.970001, 53.970001, 4948100,],
    [54.91, 55.419998, 54.700001, 54.939999, 54.939999, 10469600,],
    [54.919998, 55.200001, 54.330002, 54.759998, 54.759998, 9011500,],
    [56.599998, 57.445, 55.549999, 56.549999, 56.549999, 17490800,],
    [57.299999, 57.91, 56.799999, 57.900002, 57.900002, 14795500,],
    [58.139999, 58.630001, 56.915001, 57.16, 57.16, 11777100,],
    [57.529999, 57.599998, 57.02, 57.580002, 57.580002, 5803300,],
    [57.5, 58.959999, 57.310001, 58.959999, 58.959999, 9477500,],
    [58.310001, 58.619999, 57.549999, 58.349998, 58.349998, 9706700,],
    [58.75, 59.380001, 58.43, 59.09, 59.09, 8057400,],
    [59, 59.330002, 58.59, 58.669998, 58.669998, 7545000,],
    [58.900002, 59.07, 58.34, 58.580002, 58.580002, 6429300,],
    [58.73, 58.830002, 58.189999, 58.259998, 58.259998, 8514000,],
    [58.48, 58.939999, 57.900002, 58.790001, 58.790001, 13615600,],
    [61, 61.299999, 57.692001, 60.150002, 60.150002, 22713400,],
    [59.799999, 60.709999, 59.040001, 59.200001, 59.200001, 10800800,],
    [59.369999, 59.639999, 58.52, 58.549999, 58.549999, 7400700,],
    [59, 59.389999, 58.790001, 59.34, 59.34, 9079100,],
    [59.669998, 59.709999, 58.439999, 59.119999, 59.119999, 6517300,],
    [59.16, 59.279999, 58.360001, 58.419998, 58.419998, 6260000,],
    [58.619999, 58.93, 58.32, 58.860001, 58.860001, 6174100,],
    [59.18, 59.639999, 58.84, 59.619999, 59.619999, 5887600,],
    [59.610001, 59.880001, 59.25, 59.48, 59.48, 6001900,],
    [58.970001, 59.73, 58.59, 59.669998, 59.669998, 6023900,],
    [59.240002, 59.369999, 57.810001, 58.02, 58.02, 9571200,],
    [57.849998, 58.25, 57.580002, 58.040001, 58.040001, 6961800,],
    [58.610001, 59.276001, 58.271, 59.060001, 59.060001, 7561800,],
    [59.299999, 59.98, 59.23, 59.689999, 59.689999, 6483500,],
    [59.950001, 60.700001, 59.599998, 60.290001, 60.290001, 5747000,],
    [60.150002, 60.279999, 59.290001, 59.290001, 59.290001, 6744200,],
    [59.360001, 59.82, 58.939999, 59.439999, 59.439999, 4653300,],
    [59.330002, 59.650002, 58.755001, 59.400002, 59.400002, 4243200,],
    [59.720001, 61, 59.439999, 60.84, 60.84, 5835700,],
    [60.299999, 60.509998, 59.82, 60.049999, 60.049999, 4532000,],
    [60.220001, 60.43, 59.110001, 60, 60, 4045300,],
    [60.330002, 60.580002, 59.610001, 59.970001, 59.970001, 4087400,],
    [60.310001, 60.529999, 59.810001, 60.529999, 60.529999, 4660600,],
    [59.82, 61.16, 59.630001, 61.009998, 61.009998, 4359300,],
    [61.049999, 61.860001, 60.889999, 61.77, 61.77, 5696000,],
    [62, 62.028999, 61.169998, 61.68, 61.68, 6145800,],
    [61.98, 62.23, 61.382999, 61.459999, 61.459999, 3440400,],
    [61.259998, 61.75, 60.580002, 61.27, 61.27, 5501200,],
    [61.740002, 61.990002, 60.900002, 61.240002, 61.240002, 5350900,],
    [61.330002, 62.130001, 61.279999, 62, 62, 5022700,],
    [61.939999, 62, 61.099998, 61.130001, 61.130001, 4942600,],
    [61.73, 63.259998, 61.619999, 62.639999, 62.639999, 8266300,],
    [62.950001, 63.119999, 62.150002, 62.560001, 62.560001, 6276600,],
    [62.470001, 62.75, 61.580002, 62.040001, 62.040001, 6380900,],
    [62.040001, 62.369999, 61.709999, 62.240002, 62.240002, 5697800,],
    [62.27, 62.799999, 61.959999, 62.5, 62.5, 9940900,],
    [62.619999, 63.529999, 62.52, 62.919998, 62.919998, 7688000,],
    [63.009998, 63.924999, 62.959999, 63.830002, 63.830002, 7774000,],
    [63.990002, 64.870003, 63.830002, 64.739998, 64.739998, 11903600,],
    [64.669998, 64.949997, 63.904999, 64.629997, 64.629997, 6727300,],
    [64.330002, 65.239998, 64.110001, 65.080002, 65.080002, 6743800,],
    [65, 65, 62.365002, 63.5, 63.5, 13156900,],
    [63.709999, 63.762001, 62.84, 62.939999, 62.939999, 8551900,],
    [63.41, 63.75, 63.16, 63.330002, 63.330002, 7380700,],
    [63.619999, 64.055, 63.110001, 63.93, 63.93, 4148000,],
    [63.860001, 64.169998, 63.5, 64.029999, 64.029999, 6891300,],
    [64.5, 65.120003, 64.099998, 64.18, 64.18, 5163300,],
    [64.510002, 64.510002, 63.761002, 64.220001, 64.220001, 5633100,],
    [64.300003, 64.300003, 63.689999, 64.010002, 64.010002, 4438800,],
    [64.379997, 66, 64.220001, 65.82, 65.82, 7445700,],
    [66, 66.410004, 65.790001, 66.050003, 66.050003, 6122000,],
    [66.199997, 66.550003, 65.900002, 66.230003, 66.230003, 5517900,],
    [66.599998, 66.669998, 65.790001, 66.040001, 66.040001, 5831800,],
    [67.25, 68.419998, 66.980003, 67.779999, 67.779999, 12005600,],
    [68.019997, 68.980003, 67.805, 68.860001, 68.860001, 8888300,],
    [69.489998, 69.610001, 68, 68.660004, 68.660004, 8640700,],
    [69.040001, 69.199997, 67.279999, 67.309998, 67.309998, 9581800,],
    [67.650002, 67.669998, 66.349998, 66.669998, 66.669998, 10844000,],
    [67.400002, 67.5, 67, 67.260002, 67.260002, 7994300,],
    [67.300003, 67.449997, 66.160004, 67.25, 67.25, 14546400,],
    [71.330002, 71.730003, 69.690002, 70.970001, 70.970001, 34282800,],
    [71.019997, 71.330002, 69.550003, 69.800003, 69.800003, 12232500,],
    [69.730003, 70.565002, 69.669998, 70.209999, 70.209999, 12280400,],
    [69.940002, 71.419998, 69.849998, 71.019997, 71.019997, 12755800,],
    [71.459999, 72.07, 71.040001, 71.339996, 71.339996, 8015100,],
    [71.720001, 71.790001, 70.580002, 71.059998, 71.059998, 9256600,],
    [71.449997, 71.540001, 70.529999, 71.150002, 71.150002, 7216000,],
    [71.339996, 72.739998, 71.110001, 72.559998, 72.559998, 7555300,],
    [72.779999, 72.989998, 71.690002, 72.379997, 72.379997, 6655600,],
    [72.459999, 72.776001, 72.010002, 72.25, 72.25, 4535600,],
    [72.370003, 73.410004, 71.940002, 73.389999, 73.389999, 6726400,],
    [73.720001, 74.760002, 73.419998, 74.739998, 74.739998, 10156300,],
    [75.169998, 75.449997, 74.190002, 74.410004, 74.410004, 7026600,],
    [74, 75, 73.309998, 74.769997, 74.769997, 7593100,],
    [74.019997, 74.199997, 72.410004, 74.099998, 74.099998, 8875500,],
    [73.769997, 74.139999, 73.559998, 73.989998, 73.989998, 5714600,],
    [73.610001, 74.290001, 73.339996, 74.029999, 74.029999, 5843600,],
    [74.099998, 74.82, 73.620003, 74.489998, 74.489998, 6281500,],
    [74.300003, 74.400002, 73.184998, 73.43, 73.43, 6232500,],
    [75.5, 77.940002, 75.279999, 77.699997, 77.699997, 12856500,],
    [78.010002, 78.010002, 75.800003, 76.379997, 76.379997, 11886700,],
    [76.599998, 77.32, 75.879997, 76.010002, 76.010002, 6841800,],
    [77.089996, 78.43, 76.849998, 77.769997, 77.769997, 10603100,],
    [77.900002, 77.989998, 76.620003, 77.57, 77.57, 8073500,],
    [77.809998, 78.900002, 77.699997, 78.57, 78.57, 4306600,],
    [78.629997, 79.385002, 77.709999, 77.839996, 77.839996, 6780900,],
    [77.949997, 78.230003, 77.244003, 77.790001, 77.790001, 8741500,],
    [77.949997, 77.980003, 71.669998, 73.25, 73.25, 25202100,],
    [73.769997, 75.870003, 73.540001, 75.730003, 75.730003, 15962000,],
    [75.220001, 76.440002, 74.260002, 75.300003, 75.300003, 13387800,],
    [75.589996, 75.744003, 68.610001, 70.970001, 70.970001, 26283600,],
    [69.809998, 72.75, 69.610001, 71.199997, 71.199997, 16634000,],
    [70.889999, 73.199997, 70.830002, 73.139999, 73.139999, 9331400,],
    [73.25, 74.069, 73.25, 73.690002, 73.690002, 7937700,],
    [74.709999, 74.709999, 72.599998, 72.910004, 72.910004, 8350400,],
    [72.959999, 73.68, 72.559998, 73.290001, 73.290001, 6421900,],
    [73.449997, 74.309998, 73, 73.620003, 73.620003, 6573500,],
    [74.080002, 75.419998, 73.769997, 74.089996, 74.089996, 7196400,],
    [74.5, 75.529999, 74.199997, 74.260002, 74.260002, 7519600,],
    [74.82, 75.870003, 73.510002, 75.650002, 75.650002, 12543900,],
    [76.300003, 76.349998, 75.199997, 75.32, 75.32, 8361100,],
    [75.389999, 75.389999, 73.910004, 74.5, 74.5, 7753100,],
    [74.639999, 74.900002, 73.760002, 74, 74, 6121300,],
    [74.190002, 74.470001, 73.800003, 74.019997, 74.019997, 4763900,],
    [73.800003, 74.040001, 72.900002, 73.889999, 73.889999, 3895000,],
    [73.290001, 74.339996, 72.629997, 74.269997, 74.269997, 4919100,],
    [74.25, 74.93, 74, 74.589996, 74.589996, 4461500,],
    [74.959999, 75, 73.860001, 74.169998, 74.169998, 3810200,],

]

var matrixt = [
    [40.290001, 40.98, 40, 40.25, 40.25, 8247400, 1],
    [40.349998, 41.029999, 40.044998, 41, 41, 6806400, 1],
    [41.43, 41.720001, 41.040001, 41.060001, 41.060001, 6432000, 1],
    [41.240002, 41.639999, 40.790001, 41.450001, 41.450001, 5586400, 1],
    [41.490002, 41.509998, 41.110001, 41.400002, 41.400002, 3943900, 0],
    [41.400002, 41.549999, 41.07, 41.080002, 41.080002, 4174900, 1],
    [41.23, 41.380001, 40.834999, 41.279999, 41.279999, 4425300, 0],
    [41.279999, 41.605, 40.919998, 41.560001, 41.560001, 3840500, 1],
    [41.650002, 41.84, 41.529999, 41.599998, 41.599998, 3917700, 0],
    [41.599998, 41.709999, 41.200001, 41.27, 41.27, 5932900, 1],
    [41.41, 41.490002, 41.110001, 41.349998, 41.349998, 4706000, 0],
    [41.25, 41.68, 41.029999, 41.27, 41.27, 4717600, 1],
    [41.389999, 41.720001, 41.299999, 41.689999, 41.689999, 6868500, 1],
    [41.860001, 42.110001, 41.25, 41.619999, 41.619999, 8497100, 1],
    [41.950001, 42.040001, 41.529999, 41.959999, 41.959999, 6106500, 1],
    [42.360001, 42.439999, 41.66, 41.709999, 41.709999, 8604000, 1],
    [42.360001, 42.5, 41.285, 41.5, 41.5, 11838100, 0],
    [41, 41.200001, 39.919998, 40.27, 40.27, 22749200, 0],
    [40.169998, 40.27, 39.419998, 39.860001, 39.860001, 11486000, 0],
    [39.700001, 40.009998, 39.450001, 39.779999, 39.779999, 9100100, 1],
    [39.959999, 40, 39.110001, 39.310001, 39.310001, 8860400, 1],
    [39.400002, 39.84, 39.02, 39.580002, 39.580002, 8736800, 1],
    [39.790001, 39.93, 39.549999, 39.59, 39.59, 7131100, 1],
    [39.639999, 39.830002, 39.34, 39.740002, 39.740002, 8206400, 1],
    [40.009998, 40.34, 39.700001, 40.02, 40.02, 7956300, 1],
    [40.18, 40.990002, 39.919998, 40.880001, 40.880001, 7399000, 0],
    [40.439999, 40.994999, 40.299999, 40.830002, 40.830002, 6467600, 0],
    [40.82, 40.860001, 40.560001, 40.580002, 40.580002, 6248200, 1],
    [40.830002, 41.299999, 40.740002, 41.169998, 41.169998, 6260900, 1],
    [41.18, 41.630001, 40.939999, 41.619999, 41.619999, 6496400, 1],
    [41.689999, 41.93, 41.27, 41.869999, 41.869999, 7124600, 0],
    [41.869999, 42.310001, 41.700001, 42.150002, 42.150002, 5730800, 0],
    [41.919998, 42.299999, 41.799999, 41.959999, 41.959999, 5106000, 0],
    [41.93, 42.560001, 41.900002, 42.43, 42.43, 5874700, 0],
    [42.299999, 42.529999, 42.119999, 42.419998, 42.419998, 4316200, 0],
    [42.369999, 42.669998, 42.16, 42.529999, 42.529999, 5456300, 0],
    [42.110001, 43.07, 41.830002, 43.07, 43.07, 6769500, 0],
    [42.889999, 42.889999, 42.349998, 42.639999, 42.639999, 5026700, 0],
    [42.490002, 42.490002, 41.990002, 42, 42, 6956800, 1],
    [42.310001, 42.52, 41.990002, 42.43, 42.43, 6003800, 0],
    [42.400002, 42.860001, 42.200001, 42.77, 42.77, 4572300, 0],
    [42.700001, 43.040001, 42.580002, 43.029999, 43.029999, 4214400, 0],
    [42.98, 43.029999, 42.630001, 42.869999, 42.869999, 6032800, 0],
    [42.799999, 43.200001, 42.709999, 42.889999, 42.889999, 4404700, 0],
    [42.84, 43.18, 42.720001, 42.790001, 42.790001, 4573900, 0],
    [42.66, 43, 42.450001, 42.919998, 42.919998, 3487900, 1],
    [43.189999, 43.279999, 42.759998, 42.990002, 42.990002, 4636200, 0],
    [42.869999, 42.965, 42.450001, 42.59, 42.59, 5526900, 0],
    [42.509998, 42.639999, 41.740002, 42.099998, 42.099998, 5888000, 1],
    [42.290001, 42.57, 41.889999, 42.389999, 42.389999, 4291800, 0],
    [42.5, 42.580002, 42.139999, 42.400002, 42.400002, 3998600, 1],
    [42.57, 43.299999, 42.369999, 43.080002, 43.080002, 12307900, 0],
    [43.099998, 43.32, 42.810001, 43.16, 43.16, 6686900, 1],
    [43.330002, 43.400002, 42.459999, 42.639999, 42.639999, 7758400, 0],
    [42.595001, 43.240002, 42.450001, 43.189999, 43.189999, 6513300, 0],
    [43.130001, 43.610001, 43, 43.139999, 43.139999, 7176400, 1],
    [43.48, 43.494999, 42.935001, 43.130001, 43.130001, 5739500, 0],
    [42.689999, 43.200001, 42.580002, 43.080002, 43.080002, 3850300, 0],
    [42.869999, 43.25, 42.84, 43.150002, 43.150002, 4396500, 0],
    [43.150002, 43.299999, 42.959999, 43.240002, 43.240002, 3951100, 0],
    [43.150002, 43.799999, 43, 43.540001, 43.540001, 5691700, 0],
    [43.439999, 43.48, 43.009998, 43.02, 43.02, 5177500, 1],
    [43.200001, 43.299999, 42.509998, 42.630001, 42.630001, 7773000, 1],
    [42.740002, 42.740002, 42.259998, 42.720001, 42.720001, 4681800, 1],
    [42.830002, 43.342999, 42.740002, 42.889999, 42.889999, 5292300, 1],
    [42.900002, 43, 42.720001, 42.900002, 42.900002, 5395400, 0],
    [42.889999, 43.174999, 42.709999, 43.040001, 43.040001, 4861200, 1],
    [43.07, 43.549999, 43.009998, 43.049999, 43.049999, 4579500, 0],
    [42.990002, 43.09, 42.610001, 42.689999, 42.689999, 4856300, 0],
    [42.099998, 42.810001, 42.060001, 42.490002, 42.490002, 5800100, 1],
    [42.5, 42.889999, 42.32, 42.549999, 42.549999, 3631400, 1],
    [42.599998, 43.139999, 42.599998, 43.099998, 43.099998, 3151600, 1],
    [43.200001, 43.200001, 42.860001, 43.09, 43.09, 3711600, 0],
    [43.029999, 43.470001, 42.900002, 43.299999, 43.299999, 4913900, 1],
    [43.32, 43.799999, 43.259998, 43.689999, 43.689999, 4811200, 1],
    [43.860001, 44, 43.599998, 43.810001, 43.810001, 5595700, 1],
    [44.09, 44.279999, 43.950001, 44.27, 44.27, 4643800, 1],
    [44.490002, 45.009998, 44.349998, 44.709999, 44.709999, 7827900, 1],
    [45.040001, 45.040001, 44.25, 44.41, 44.41, 9846900, 1],
    [47.25, 48.099998, 46.75, 47.150002, 47.150002, 34420200, 0],
    [47.029999, 47.755001, 46.869999, 47.720001, 47.720001, 11642800, 0],
    [47.389999, 47.713001, 47.32, 47.540001, 47.540001, 14537500, 0],
    [47.41, 49.07, 47.400002, 49.049999, 49.049999, 16820800, 1],
    [49.16, 49.290001, 48.625, 49.02, 49.02, 11613100, 0],
    [48.93, 49.380001, 48.82, 48.91, 48.91, 7148800, 0],
    [48.619999, 49.439999, 48.400002, 49.299999, 49.299999, 4876200, 1],
    [49.43, 49.450001, 48.810001, 49.169998, 49.169998, 6641000, 1],
    [49.060001, 49.369999, 48.900002, 49.220001, 49.220001, 4774000, 0],
    [49.18, 49.799999, 49.014999, 49.790001, 49.790001, 6507700, 0],
    [49.630001, 49.709999, 49.110001, 49.700001, 49.700001, 5547700, 0],
    [49.580002, 49.75, 49.240002, 49.369999, 49.369999, 4933700, 0],
    [49.310001, 50, 49.25, 49.77, 49.77, 4705900, 0],
    [49.630001, 50.349998, 49.57, 50.34, 50.34, 5347200, 0],
    [49.869999, 50.099998, 49.025002, 49.049999, 49.049999, 6598400, 0],
    [49.029999, 49.580002, 48.889999, 49.110001, 49.110001, 9932100, 1],
    [49.150002, 49.709999, 49.060001, 49.389999, 49.389999, 7813800, 1],
    [49.450001, 49.880001, 49.349998, 49.77, 49.77, 13144900, 1],
    [49.900002, 50.18, 49.77, 50.130001, 50.130001, 7134200, 0],
    [50.23, 51.080002, 50.139999, 51.049999, 51.049999, 6274800, 0],
    [50.77, 51.130001, 50.639999, 50.93, 50.93, 4950500, 1],
    [51.040001, 51.389999, 50.889999, 51.189999, 51.189999, 4780800, 0],
    [50.959999, 51.279999, 50.860001, 51.060001, 51.060001, 5550300, 1],
    [51.130001, 52.240002, 50.880001, 52.209999, 52.209999, 11107200, 1],
    [52.48, 53.389999, 52.474998, 53.16, 53.16, 13898300, 1],
    [53.439999, 53.639999, 53.080002, 53.52, 53.52, 9121800, 1],
    [53.77, 54.07, 53.59, 53.799999, 53.799999, 9656400, 0],
    [53.75, 53.799999, 53.16, 53.400002, 53.400002, 6308000, 0],
    [53.299999, 53.939999, 53.259998, 53.849998, 53.849998, 6368700, 1],
    [54.029999, 54.43, 53.450001, 54.389999, 54.389999, 6369900, 1],
    [54.650002, 55.139999, 52.849998, 53.400002, 53.400002, 11174100, 0],
    [52.810001, 52.900002, 51.43, 52.16, 52.16, 15765600, 1],
    [52.290001, 52.485001, 51.700001, 52.060001, 52.060001, 10411800, 0],
    [52, 52.505001, 51.535, 51.900002, 51.900002, 7132500, 0],
    [51.439999, 52.380001, 50.830002, 52.290001, 52.290001, 12401600, 0],
    [52.040001, 52.16, 51.580002, 51.84, 51.84, 10931000, 1],
    [52.279999, 53, 52.110001, 52.93, 52.93, 5643900, 0],
    [52.84, 53.23, 52.43, 52.52, 52.52, 4578700, 1],
    [52.990002, 53.580002, 52.610001, 53.540001, 53.540001, 8016500, 1],
    [53.709999, 53.951, 52.860001, 53.869999, 53.869999, 9673000, 0],
    [53.82, 54.529999, 53.689999, 54.330002, 54.330002, 6257300, 1],
    [54.439999, 55.099998, 53.650002, 53.740002, 53.740002, 4890300, 0],
    [53.599998, 53.790001, 52.639999, 52.73, 52.73, 7706800, 1],
    [52.75, 54.439999, 52.650002, 54.389999, 54.389999, 7934300, 0],
    [53.810001, 54.099998, 52.52, 53.419998, 53.419998, 11616200, 1],
    [53.599998, 54.25, 53.290001, 53.669998, 53.669998, 8235000, 1],
    [54.139999, 54.330002, 52.830002, 52.869999, 52.869999, 4831300, 1],
    [53, 54.75, 52.939999, 54.610001, 54.610001, 9800600, 0],
    [54.220001, 54.351002, 53.150002, 53.470001, 53.470001, 7447900, 1],
    [53.700001, 54.48, 53.52, 53.970001, 53.970001, 4948100, 1],
    [54.91, 55.419998, 54.700001, 54.939999, 54.939999, 10469600, 0],
    [54.919998, 55.200001, 54.330002, 54.759998, 54.759998, 9011500, 1],
    [56.599998, 57.445, 55.549999, 56.549999, 56.549999, 17490800, 1],
    [57.299999, 57.91, 56.799999, 57.900002, 57.900002, 14795500, 1],
    [58.139999, 58.630001, 56.915001, 57.16, 57.16, 11777100, 1],
    [57.529999, 57.599998, 57.02, 57.580002, 57.580002, 5803300, 0],
    [57.5, 58.959999, 57.310001, 58.959999, 58.959999, 9477500, 0],
    [58.310001, 58.619999, 57.549999, 58.349998, 58.349998, 9706700, 1],
    [58.75, 59.380001, 58.43, 59.09, 59.09, 8057400, 0],
    [59, 59.330002, 58.59, 58.669998, 58.669998, 7545000, 1],
    [58.900002, 59.07, 58.34, 58.580002, 58.580002, 6429300, 1],
    [58.73, 58.830002, 58.189999, 58.259998, 58.259998, 8514000, 1],
    [58.48, 58.939999, 57.900002, 58.790001, 58.790001, 13615600, 1],
    [61, 61.299999, 57.692001, 60.150002, 60.150002, 22713400, 0],
    [59.799999, 60.709999, 59.040001, 59.200001, 59.200001, 10800800, 1],
    [59.369999, 59.639999, 58.52, 58.549999, 58.549999, 7400700, 1],
    [59, 59.389999, 58.790001, 59.34, 59.34, 9079100, 1],
    [59.669998, 59.709999, 58.439999, 59.119999, 59.119999, 6517300, 1],
    [59.16, 59.279999, 58.360001, 58.419998, 58.419998, 6260000, 1],
    [58.619999, 58.93, 58.32, 58.860001, 58.860001, 6174100, 1],
    [59.18, 59.639999, 58.84, 59.619999, 59.619999, 5887600, 0],
    [59.610001, 59.880001, 59.25, 59.48, 59.48, 6001900, 0],
    [58.970001, 59.73, 58.59, 59.669998, 59.669998, 6023900, 0],
    [59.240002, 59.369999, 57.810001, 58.02, 58.02, 9571200, 0],
    [57.849998, 58.25, 57.580002, 58.040001, 58.040001, 6961800, 1],
    [58.610001, 59.276001, 58.271, 59.060001, 59.060001, 7561800, 1],
    [59.299999, 59.98, 59.23, 59.689999, 59.689999, 6483500, 1],
    [59.950001, 60.700001, 59.599998, 60.290001, 60.290001, 5747000, 0],
    [60.150002, 60.279999, 59.290001, 59.290001, 59.290001, 6744200, 1],
    [59.360001, 59.82, 58.939999, 59.439999, 59.439999, 4653300, 0],
    [59.330002, 59.650002, 58.755001, 59.400002, 59.400002, 4243200, 1],
    [59.720001, 61, 59.439999, 60.84, 60.84, 5835700, 0],
    [60.299999, 60.509998, 59.82, 60.049999, 60.049999, 4532000, 1],
    [60.220001, 60.43, 59.110001, 60, 60, 4045300, 1],
    [60.330002, 60.580002, 59.610001, 59.970001, 59.970001, 4087400, 1],
    [60.310001, 60.529999, 59.810001, 60.529999, 60.529999, 4660600, 0],
    [59.82, 61.16, 59.630001, 61.009998, 61.009998, 4359300, 1],
    [61.049999, 61.860001, 60.889999, 61.77, 61.77, 5696000, 1],
    [62, 62.028999, 61.169998, 61.68, 61.68, 6145800, 1],
    [61.98, 62.23, 61.382999, 61.459999, 61.459999, 3440400, 0],
    [61.259998, 61.75, 60.580002, 61.27, 61.27, 5501200, 1],
    [61.740002, 61.990002, 60.900002, 61.240002, 61.240002, 5350900, 1],
    [61.330002, 62.130001, 61.279999, 62, 62, 5022700, 0],
    [61.939999, 62, 61.099998, 61.130001, 61.130001, 4942600, 1],
    [61.73, 63.259998, 61.619999, 62.639999, 62.639999, 8266300, 1],
    [62.950001, 63.119999, 62.150002, 62.560001, 62.560001, 6276600, 0],
    [62.470001, 62.75, 61.580002, 62.040001, 62.040001, 6380900, 0],
    [62.040001, 62.369999, 61.709999, 62.240002, 62.240002, 5697800, 1],
    [62.27, 62.799999, 61.959999, 62.5, 62.5, 9940900, 1],
    [62.619999, 63.529999, 62.52, 62.919998, 62.919998, 7688000, 1],
    [63.009998, 63.924999, 62.959999, 63.830002, 63.830002, 7774000, 1],
    [63.990002, 64.870003, 63.830002, 64.739998, 64.739998, 11903600, 0],
    [64.669998, 64.949997, 63.904999, 64.629997, 64.629997, 6727300, 0],
    [64.330002, 65.239998, 64.110001, 65.080002, 65.080002, 6743800, 0],
    [65, 65, 62.365002, 63.5, 63.5, 13156900, 1],
    [63.709999, 63.762001, 62.84, 62.939999, 62.939999, 8551900, 1],
    [63.41, 63.75, 63.16, 63.330002, 63.330002, 7380700, 1],
    [63.619999, 64.055, 63.110001, 63.93, 63.93, 4148000, 0],
    [63.860001, 64.169998, 63.5, 64.029999, 64.029999, 6891300, 1],
    [64.5, 65.120003, 64.099998, 64.18, 64.18, 5163300, 1],
    [64.510002, 64.510002, 63.761002, 64.220001, 64.220001, 5633100, 1],
    [64.300003, 64.300003, 63.689999, 64.010002, 64.010002, 4438800, 1],
    [64.379997, 66, 64.220001, 65.82, 65.82, 7445700, 1],
    [66, 66.410004, 65.790001, 66.050003, 66.050003, 6122000, 1],
    [66.199997, 66.550003, 65.900002, 66.230003, 66.230003, 5517900, 1],
    [66.599998, 66.669998, 65.790001, 66.040001, 66.040001, 5831800, 1],
    [67.25, 68.419998, 66.980003, 67.779999, 67.779999, 12005600, 1],
    [68.019997, 68.980003, 67.805, 68.860001, 68.860001, 8888300, 1],
    [69.489998, 69.610001, 68, 68.660004, 68.660004, 8640700, 1],
    [69.040001, 69.199997, 67.279999, 67.309998, 67.309998, 9581800, 1],
    [67.650002, 67.669998, 66.349998, 66.669998, 66.669998, 10844000, 1],
    [67.400002, 67.5, 67, 67.260002, 67.260002, 7994300, 1],
    [67.300003, 67.449997, 66.160004, 67.25, 67.25, 14546400, 1],
    [71.330002, 71.730003, 69.690002, 70.970001, 70.970001, 34282800, 1],
    [71.019997, 71.330002, 69.550003, 69.800003, 69.800003, 12232500, 0],
    [69.730003, 70.565002, 69.669998, 70.209999, 70.209999, 12280400, 0],
    [69.940002, 71.419998, 69.849998, 71.019997, 71.019997, 12755800, 1],
    [71.459999, 72.07, 71.040001, 71.339996, 71.339996, 8015100, 1],
    [71.720001, 71.790001, 70.580002, 71.059998, 71.059998, 9256600, 1],
    [71.449997, 71.540001, 70.529999, 71.150002, 71.150002, 7216000, 1],
    [71.339996, 72.739998, 71.110001, 72.559998, 72.559998, 7555300, 1],
    [72.779999, 72.989998, 71.690002, 72.379997, 72.379997, 6655600, 1],
    [72.459999, 72.776001, 72.010002, 72.25, 72.25, 4535600, 1],
    [72.370003, 73.410004, 71.940002, 73.389999, 73.389999, 6726400, 1],
    [73.720001, 74.760002, 73.419998, 74.739998, 74.739998, 10156300, 1],
    [75.169998, 75.449997, 74.190002, 74.410004, 74.410004, 7026600, 0],
    [74, 75, 73.309998, 74.769997, 74.769997, 7593100, 1],
    [74.019997, 74.199997, 72.410004, 74.099998, 74.099998, 8875500, 0],
    [73.769997, 74.139999, 73.559998, 73.989998, 73.989998, 5714600, 0],
    [73.610001, 74.290001, 73.339996, 74.029999, 74.029999, 5843600, 1],
    [74.099998, 74.82, 73.620003, 74.489998, 74.489998, 6281500, 0],
    [74.300003, 74.400002, 73.184998, 73.43, 73.43, 6232500, 1],
    [75.5, 77.940002, 75.279999, 77.699997, 77.699997, 12856500, 1],
    [78.010002, 78.010002, 75.800003, 76.379997, 76.379997, 11886700, 1],
    [76.599998, 77.32, 75.879997, 76.010002, 76.010002, 6841800, 1],
    [77.089996, 78.43, 76.849998, 77.769997, 77.769997, 10603100, 1],
    [77.900002, 77.989998, 76.620003, 77.57, 77.57, 8073500, 1],
    [77.809998, 78.900002, 77.699997, 78.57, 78.57, 4306600, 1],
    [78.629997, 79.385002, 77.709999, 77.839996, 77.839996, 6780900, 1],
    [77.949997, 78.230003, 77.244003, 77.790001, 77.790001, 8741500, 1],
    [77.949997, 77.980003, 71.669998, 73.25, 73.25, 25202100, 1],
    [73.769997, 75.870003, 73.540001, 75.730003, 75.730003, 15962000, 0],
    [75.220001, 76.440002, 74.260002, 75.300003, 75.300003, 13387800, 1],
    [75.589996, 75.744003, 68.610001, 70.970001, 70.970001, 26283600, 0],
    [69.809998, 72.75, 69.610001, 71.199997, 71.199997, 16634000, 0],
    [70.889999, 73.199997, 70.830002, 73.139999, 73.139999, 9331400, 1],
    [73.25, 74.069, 73.25, 73.690002, 73.690002, 7937700, 1],
    [74.709999, 74.709999, 72.599998, 72.910004, 72.910004, 8350400, 1],
    [72.959999, 73.68, 72.559998, 73.290001, 73.290001, 6421900, 1],
    [73.449997, 74.309998, 73, 73.620003, 73.620003, 6573500, 1],
    [74.080002, 75.419998, 73.769997, 74.089996, 74.089996, 7196400, 1],
    [74.5, 75.529999, 74.199997, 74.260002, 74.260002, 7519600, 1],
    [74.82, 75.870003, 73.510002, 75.650002, 75.650002, 12543900, 1],
    [76.300003, 76.349998, 75.199997, 75.32, 75.32, 8361100, 0],
    [75.389999, 75.389999, 73.910004, 74.5, 74.5, 7753100, 1],
    [74.639999, 74.900002, 73.760002, 74, 74, 6121300, 1],
    [74.190002, 74.470001, 73.800003, 74.019997, 74.019997, 4763900, 0],
    [73.800003, 74.040001, 72.900002, 73.889999, 73.889999, 3895000, 0],
    [73.290001, 74.339996, 72.629997, 74.269997, 74.269997, 4919100, 0],
    [74.25, 74.93, 74, 74.589996, 74.589996, 4461500, 1],
    [74.959999, 75, 73.860001, 74.169998, 74.169998, 3810200, 0],
]

var yt = [
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [0],
    [1],
    [0],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [0],
    [0],
    [1],
    [0],
    [1],
    [0],
    [1],
    [0],
    [0],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [0],
    [0],
    [1],
    [1],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [1],
    [0],
    [0],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [0],
    [0],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [1],
    [1],
    [0],
    [1],
    [0],
    [0],
    [0],
    [1],
    [0],
    [1],
    [1],
    [0],
    [1],
    [0],
    [1],
    [0],
    [1],
    [1],
    [1],
    [0],
    [1],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [0],
    [1],
    [0],
    [1],
    [0],
    [1],
    [1],
    [1],
    [0],
    [1],
    [1],
    [1],
    [0],
    [1],
    [1],
    [0],
    [1],
    [1],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [0],
    [1],
    [1],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [0],
    [0],
    [1],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [0],
    [0],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [1],
    [0],
    [1],
    [1],
    [0],
    [0],
    [0],
    [1],
    [0],
]

init(matrix);

function init(matrix) {

    /**let X = math.evaluate('matrix[:, 1:2]', {
        matrix,
    });
    let y = math.evaluate('matrix[:, 3]', {
        matrix,
    });*/

    let m = y.length;
    let n = X[0].length;

    console.log("Part 1: \n");

    X = math.concat(math.ones([m, 1]).valueOf(), X);

    let theta = Array(n + 1).fill().map(() => [0]);
    let cost = costFunction(theta, X, y);

    console.log("cost: ", cost);
    console.log("\n");

    const ALPHA = 0.001;
    const ITERATIONS = 500;

    theta = [[-25], [0], [0]];
    theta = gradientDescent(X, y, theta, ALPHA, ITERATIONS);

    cost = costFunction(theta, X, y);

    console.log('theta: ', theta);
    console.log('\n');
    console.log('cost: ', cost);
    console.log('\n');

    let studentVector = [1, 73.919998, 74.529999];
    let prob = sigmoid(math.evaluate('studentVector * theta', {
        studentVector,
        theta,
    }));

    console.log('Predicted whether or not to buy ', prob);
}

function gradientDescent(X, y, theta, ALPHA, ITERATIONS) {

    const m = y.length

    for (let i = 0; i < ITERATIONS; i++) {
        let h = sigmoid(math.evaluate(`X * theta`, {
            X,
            theta,
        }));

        theta = math.evaluate(`theta - ALPHA / m *((h-y)' * X)'`, {
            theta,
            ALPHA,
            m,
            X,
            y,
            h,
        });
    }
    return theta;
}

function costFunction(theta, X, y) {

    const m = y.length;

    let h = sigmoid(math.evaluate(`X * theta`, {
        X,
        theta,
    }));

    const cost = math.evaluate(`(1/m) * (-y' * log(h) - (1-y)' * log(1-h))`, {
        h,
        y,
        m,
    });

    return cost;
}

function sigmoid(z) {

    let g = math.evaluate(`1 ./ (1 + e.^-z)`, {
        z,
    });

    return g;
}

export default class DraggableGraph extends React.Component {

    render() {

        const dataFive = {
            labels: fiveLabel.labels,
            datasets: [
                {
                    data: fiveActual.dataSet,
                    label: 'Stock Price',
                    backgroundColor: '#1C9CD3',
                    borderColor: '#1C9CD3',
                    fill: false,
                    spanGaps: true,
                    lineTension: 0,
                    pointRadius: 1
                },
                {
                    data: fiveMachine.dataSet,
                    label: 'Machine\'s predicitons',
                    backgroundColor: '#195D81',
                    borderColor: '#195D81',
                    fill: false,
                    spanGaps: true,
                    lineTension: 0,
                    pointRadius: 1
                }
            ],
        };

        const dataTen = {
            labels: tenLabel.labels,
            datasets: [
                {
                    data: tenActual.dataSet,
                    label: 'Your Prediction',
                    lineTension: 0,
                    backgroundColor: '#1C9CD3',
                    borderColor: '#1C9CD3',
                    borderWidth: 2,
                    fill: false,
                    spanGaps: true,
                    lineTension: 0
                },
                {
                    data: tenMachine.dataSet,
                    label: 'Machine\'s predicitons',
                    lineTension: 0,
                    backgroundColor: '#195D81',
                    borderColor: '#195D81',
                    borderWidth: 2,
                    fill: false,
                    spanGaps: true,
                    lineTension: 0
                }
            ],
        };

        const dataFifteen = {
            labels: fifteenLabel.labels,
            datasets: [
                {
                    data: fifteenActual.dataSet,
                    label: 'Your Prediction',
                    lineTension: 0,
                    backgroundColor: '#1C9CD3',
                    borderColor: '#1C9CD3',
                    borderWidth: 2,
                    fill: false,
                    spanGaps: true,
                    lineTension: 0
                },
                {
                    data: fifteenMachine.dataSet,
                    label: 'Machine\'s predicitons',
                    lineTension: 0,
                    backgroundColor: '#195D81',
                    borderColor: '#195D81',
                    borderWidth: 2,
                    fill: false,
                    spanGaps: true,
                    lineTension: 0
                }
            ],
        };

        return (
            <body>
                <div class="chartFormat">
                    <div class="fiveElement" id="fiveElement">
                        <Line
                            data={dataFive}
                            options={options}
                        />
                    </div>
                    <div class="tenElement" id="tenElement">
                        <Line
                            data={dataTen}
                            options={options}
                        />
                    </div>
                    <div class="fifteenElement" id="fifteenElement">
                        <Line
                            data={dataFifteen}
                            options={options}
                        />
                    </div>
                </div>
                <button class="select" onClick={() => cycleCharts()}>Next Chart</button>
                <button class="python" onClick={() => launchPythonScript()}>Logistic Regression</button>
            </body>
        );
    }
}

var increment = 1;

function cycleCharts() {
    if (increment == 1) {
        document.getElementById('fiveElement').style.display = 'none'
        document.getElementById('tenElement').style.display = 'block'
        increment++;
        return
    }
    else if (increment == 2) {
        document.getElementById('tenElement').style.display = 'none'
        document.getElementById('fifteenElement').style.display = 'block'
        increment++;
        return
    }
    else if (increment == 3) {
        document.getElementById('fifteenElement').style.display = 'none'
        document.getElementById('fiveElement').style.display = 'block'
        increment = 1;
        return
    }
}

function launchPythonScript() {
    //const { spawn } = require('child_process')
    //const pythonScript = spawn('python', ['pythonLogistic.py'])
}