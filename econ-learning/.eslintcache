[{"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\index.js":"1","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz2.js":"2","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz6.js":"3","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz5.js":"4","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz4.js":"5","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz9.js":"6","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\modulesSelectionDOM.js":"7","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\TestingDragChart.js":"8","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz10.js":"9","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\pages\\Modules.js":"10","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz7.js":"11","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\modulesData.js":"12","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz8.js":"13","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz1.js":"14"},{"size":520,"mtime":1617056502320,"results":"15","hashOfConfig":"16"},{"size":4540,"mtime":1617846191350,"results":"17","hashOfConfig":"16"},{"size":5235,"mtime":1617810929819,"results":"18","hashOfConfig":"16"},{"size":4906,"mtime":1617810929819,"results":"19","hashOfConfig":"16"},{"size":4528,"mtime":1617810929819,"results":"20","hashOfConfig":"16"},{"size":4854,"mtime":1617846330266,"results":"21","hashOfConfig":"16"},{"size":1994,"mtime":1617846330261,"results":"22","hashOfConfig":"16"},{"size":76921,"mtime":1617909797383,"results":"23","hashOfConfig":"16"},{"size":4527,"mtime":1617846362002,"results":"24","hashOfConfig":"16"},{"size":239,"mtime":1617056502321,"results":"25","hashOfConfig":"16"},{"size":5233,"mtime":1617846330264,"results":"26","hashOfConfig":"16"},{"size":78785,"mtime":1617909599106,"results":"27","hashOfConfig":"16"},{"size":4876,"mtime":1617846330265,"results":"28","hashOfConfig":"16"},{"size":4565,"mtime":1617846160467,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f9wscq",{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\index.js",[],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz2.js",["65","66","67","68","69","70","71","72"],"import { CredentialsContext } from \"../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  import DragChart from '../TestingDragChart'\r\nimport '../../components/quiz.css'\r\nimport { modulesData } from '../../components/modulesData'\r\n  import * as Styled from '../../components/StyledButton'\r\n\r\nexport const handleErrors = async (response) => {\r\n  if (!response.ok) {\r\n    const { message } = await response.json();\r\n    throw Error(message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport default function Quiz2() {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const [username, setUsername] = useState(credentials && credentials.username);\r\n  const [error, setError] = useState(\"\");\r\n\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: modulesData[3].QuizPool[0][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: modulesData[3].QuizPool[1][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: modulesData[3].QuizPool[2][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [tokens, setTokens] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetTokens((score + 1) * 5);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n  const storeQuiz2 = (e) => {\r\n    e.preventDefault();\r\n    fetch(`http://localhost:4000/Quiz2`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        tokens,\r\n      }),\r\n    })\r\n      .then(handleErrors)\r\n      .then(() => {\r\n        setCredentials({\r\n          username,\r\n          tokens,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n   const history = useHistory();\r\n\r\n\treturn (\r\n        <>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n                <>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\r\n\t\t\t\t\tYou earned {tokens} tokens\r\n\t\t\t\t</div>\r\n\t\t\t\t</center>\r\n                <div className=\"nextMod\">\r\n\t\t\t\t<form onClick={storeQuiz2}>\r\n                <h4 id = \"leftMod\"><Link to=\"/modules/1/0\"><Styled.Button>Restart</Styled.Button></Link></h4>\r\n\t\t\t\t<h4 id = \"rightMod\"><Link to=\"/modules/2/0\"><Styled.Button>Next Module</Styled.Button></Link></h4>\r\n\t\t\t\t</form>\r\n\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className=\"credits\">\r\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\r\n                </div>\r\n\t\t\t\t</center>\r\n                </>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t<h2 align=\"center\">Quiz 2</h2>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n        <DragChart/>\r\n        </>\r\n\t);\r\n}",["73","74"],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz6.js",["75","76","77","78","79","80","81","82"],"import { CredentialsContext } from \"../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  import DragChart from '../TestingDragChart'\r\n  import '../../components/quiz.css'\r\n  import * as Styled from '../../components/StyledButton'\r\n  import {modulesData} from '../../components/modulesData'\r\n\r\n\r\nexport const handleErrors = async (response) => {\r\n  if (!response.ok) {\r\n    const { message } = await response.json();\r\n    throw Error(message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport default function Quiz6() {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const [username, setUsername] = useState(credentials && credentials.username); \r\n  const [error, setError] = useState(\"\");\r\n\r\n  const questions = [\r\n\t{\r\n\t\tquestionText: modulesData[5].QuizPool[0][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[5].QuizPool[0][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[0][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[0][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[0][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[5].QuizPool[1][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[5].QuizPool[1][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[1][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[1][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[1][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[5].QuizPool[2][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[5].QuizPool[2][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[2][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[2][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[2][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[5].QuizPool[3][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[5].QuizPool[3][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[3][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[3][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[3][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[5].QuizPool[4][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[5].QuizPool[4][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[4][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[4][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[5].QuizPool[4][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [tokens, setTokens] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetTokens((score + 1) * 5);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n  const storeQuiz6 = (e) => {\r\n    e.preventDefault();\r\n    fetch(`http://localhost:4000/Quiz6`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        tokens,\r\n      }),\r\n    })\r\n      .then(handleErrors)\r\n      .then(() => {\r\n        setCredentials({\r\n          username,\r\n          tokens,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n\treturn (\r\n        <>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n                <>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\r\n\t\t\t\t\tYou earned {tokens} tokens\r\n\t\t\t\t</div>\r\n\t\t\t\t</center>\r\n                <div className=\"nextMod\">\r\n\t\t\t\t<form onClick={storeQuiz6}>\r\n                <h4 id = \"leftMod\"><Link to=\"/modules/5/0\"><Styled.Button>Restart</Styled.Button></Link></h4>\r\n\t\t\t\t<h4 id = \"rightMod\"><Link to=\"/modules/6/0\"><Styled.Button>Next Module</Styled.Button></Link></h4>\r\n\t\t\t\t</form>\r\n\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className=\"credits\">\r\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\r\n                </div>\r\n\t\t\t\t</center>\r\n                </>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t<h2 align=\"center\">Quiz 6</h2>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div> \r\n        <DragChart/>\r\n        </>\r\n\t);\r\n}","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz5.js",["83","84","85","86","87","88","89","90"],"import { CredentialsContext } from \"../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  import DragChart from '../TestingDragChart'\r\n  import {modulesData} from '../../components/modulesData'\r\n  import '../../components/quiz.css'\r\nimport * as Styled from '../../components/StyledButton'\r\n\r\nexport const handleErrors = async (response) => {\r\n  if (!response.ok) {\r\n    const { message } = await response.json();\r\n    throw Error(message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport default function Quiz5() {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const [username, setUsername] = useState(credentials && credentials.username);\r\n  const [error, setError] = useState(\"\");\r\n\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: modulesData[4].QuizPool[0][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: modulesData[4].QuizPool[1][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: modulesData[4].QuizPool[2][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: modulesData[4].QuizPool[3][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [tokens, setTokens] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetTokens((score + 1) * 5);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n  const storeQuiz5 = (e) => {\r\n    e.preventDefault();\r\n    fetch(`http://localhost:4000/Quiz5`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        tokens,\r\n      }),\r\n    })\r\n      .then(handleErrors)\r\n      .then(() => {\r\n        setCredentials({\r\n          username,\r\n          tokens,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n\treturn (\r\n        <>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n                <>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\r\n\t\t\t\t\tYou earned {tokens} tokens\r\n\t\t\t\t</div>\r\n\t\t\t\t</center>\r\n                <div className=\"nextMod\">\r\n\t\t\t\t<form onClick={storeQuiz5}>\r\n                <h4 id = \"leftMod\"><Link to=\"/modules/4/0\"><Styled.Button>Restart</Styled.Button></Link></h4>\r\n\t\t\t\t<h4 id = \"rightMod\"><Link to=\"/modules/5/0\"><Styled.Button>Next Module</Styled.Button></Link></h4>\r\n\t\t\t\t</form>\r\n\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className=\"credits\">\r\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\r\n                </div>\r\n\t\t\t\t</center>\r\n                </>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t<h2 align=\"center\">Quiz 5</h2>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n        <DragChart/>\r\n        </>\r\n\t);\r\n}","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz4.js",["91","92","93","94","95","96","97","98"],"import { CredentialsContext } from \"../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  import DragChart from '../TestingDragChart'\r\n  import {modulesData} from '../../components/modulesData'\r\n  import '../../components/quiz.css'\r\nimport * as Styled from '../../components/StyledButton'\r\n\r\nexport const handleErrors = async (response) => {\r\n  if (!response.ok) {\r\n    const { message } = await response.json();\r\n    throw Error(message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport default function Quiz4() {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const [username, setUsername] = useState(credentials && credentials.username);\r\n  const [error, setError] = useState(\"\");\r\n\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: modulesData[3].QuizPool[0][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: modulesData[3].QuizPool[1][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: modulesData[3].QuizPool[2][0],\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][1], isCorrect: true },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][2], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][3], isCorrect: false },\r\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][4], isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [tokens, setTokens] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetTokens((score + 1) * 5);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n  const storeQuiz4 = (e) => {\r\n    e.preventDefault();\r\n    fetch(`http://localhost:4000/Quiz4`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        tokens,\r\n      }),\r\n    })\r\n      .then(handleErrors)\r\n      .then(() => {\r\n        setCredentials({\r\n          username,\r\n          tokens,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n\treturn (\r\n        <>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n                <>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\r\n\t\t\t\t\tYou earned {tokens} tokens\r\n\t\t\t\t</div>\r\n\t\t\t\t</center>\r\n\t\t\t\t<div className=\"nextMod\">\r\n\t\t\t\t<form onClick={storeQuiz4}>\r\n                <h4 id = \"leftMod\"><Link to=\"/modules/3/0\"><Styled.Button>Restart</Styled.Button></Link></h4>\r\n\t\t\t\t<h4 id = \"rightMod\"><Link to=\"/modules/4/0\"><Styled.Button>Next Module</Styled.Button></Link></h4>\r\n\t\t\t\t</form>\r\n\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className=\"credits\">\r\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\r\n                </div>\r\n\t\t\t\t</center>\r\n                </>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t<h2 align=\"center\">Quiz 4</h2>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div> \r\n        <DragChart/>\r\n        </>\r\n\t);\r\n}","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz9.js",["99","100","101","102","103","104","105","106"],"import { CredentialsContext } from \"../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport DragChart from '../TestingDragChart'\r\nimport '../../components/quiz.css'\r\nimport * as Styled from '../StyledButton'\r\nimport { modulesData } from '../../components/modulesData'\r\n\r\nexport const handleErrors = async (response) => {\r\n  if (!response.ok) {\r\n    const { message } = await response.json();\r\n    throw Error(message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport default function Quiz9() {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const [username, setUsername] = useState(credentials && credentials.username);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const questions = [\r\n\t{\r\n\t\tquestionText: modulesData[8].QuizPool[0][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[8].QuizPool[0][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[0][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[0][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[0][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[8].QuizPool[1][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[8].QuizPool[1][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[1][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[1][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[1][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[8].QuizPool[2][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[8].QuizPool[2][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[2][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[2][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[2][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[8].QuizPool[3][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[8].QuizPool[3][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[3][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[3][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[8].QuizPool[3][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [tokens, setTokens] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetTokens((score + 1) * 5);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n  const storeQuiz9 = (e) => {\r\n    e.preventDefault();\r\n    fetch(`http://localhost:4000/Quiz9`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        tokens,\r\n      }),\r\n    })\r\n      .then(handleErrors)\r\n      .then(() => {\r\n        setCredentials({\r\n          username,\r\n          tokens,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n\treturn (\r\n        <>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n                <>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\r\n\t\t\t\t\tYou earned {tokens} tokens\r\n\t\t\t\t</div>\r\n\t\t\t\t</center>\r\n                <div className=\"nextMod\">\r\n\t\t\t\t<form onClick={storeQuiz9}>\r\n                <h4 id = \"leftMod\"><Link to=\"/modules/8/0\"><Styled.Button>Restart</Styled.Button></Link></h4>\r\n\t\t\t\t<h4 id = \"rightMod\"><Link to=\"/modules/9/0\"><Styled.Button>Next Module</Styled.Button></Link></h4>\r\n\t\t\t\t</form>\r\n\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className=\"credits\">\r\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\r\n                </div>\r\n\t\t\t\t</center>\r\n                </>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t<h2 align=\"center\">Quiz 9</h2>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div> \r\n        <DragChart/>\r\n        </>\r\n\t);\r\n}","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\modulesSelectionDOM.js",["107","108"],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\TestingDragChart.js",["109","110","111","112","113","114","115","116","117","118"],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz10.js",["119","120","121","122","123","124","125","126"],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\pages\\Modules.js",["127"],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz7.js",["128","129","130","131","132","133","134","135"],"import { CredentialsContext } from \"../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  import DragChart from '../TestingDragChart'\r\n  import '../../components/quiz.css'\r\n  import * as Styled from '../../components/StyledButton'\r\n  import { modulesData } from '../../components/modulesData'\r\n\r\nexport const handleErrors = async (response) => {\r\n  if (!response.ok) {\r\n    const { message } = await response.json();\r\n    throw Error(message);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport default function Quiz7() {\r\n  const [credentials, setCredentials] = useContext(CredentialsContext);\r\n  const [username, setUsername] = useState(credentials && credentials.username);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const questions = [\r\n\t{\r\n\t\tquestionText: modulesData[6].QuizPool[0][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[6].QuizPool[0][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[0][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[0][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[0][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[6].QuizPool[1][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[6].QuizPool[1][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[1][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[1][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[1][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[6].QuizPool[2][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[6].QuizPool[2][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[2][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[2][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[2][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[6].QuizPool[3][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[6].QuizPool[3][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[3][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[3][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[3][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tquestionText: modulesData[6].QuizPool[4][0],\r\n\t\tanswerOptions: [\r\n\t\t\t{ answerText: modulesData[6].QuizPool[4][1], isCorrect: true },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[4][2], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[4][3], isCorrect: false },\r\n\t\t\t{ answerText: modulesData[6].QuizPool[4][4], isCorrect: false },\r\n\t\t],\r\n\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [tokens, setTokens] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetTokens((score + 1) * 5);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n  const storeQuiz7 = (e) => {\r\n    e.preventDefault();\r\n    fetch(`http://localhost:4000/Quiz7`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        tokens,\r\n      }),\r\n    })\r\n      .then(handleErrors)\r\n      .then(() => {\r\n        setCredentials({\r\n          username,\r\n          tokens,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n\treturn (\r\n        <>\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n                <>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\r\n\t\t\t\t\tYou earned {tokens} tokens\r\n\t\t\t\t</div>\r\n\t\t\t\t</center>\r\n                <div className=\"nextMod\">\r\n\t\t\t\t<form onClick={storeQuiz7}>\r\n                <h4 id = \"leftMod\"><Link to=\"/modules/6/0\"><Styled.Button>Restart</Styled.Button></Link></h4>\r\n\t\t\t\t<h4 id = \"rightMod\"><Link to=\"/modules/7/0\"><Styled.Button>Next Module</Styled.Button></Link></h4>\r\n\t\t\t\t</form>\r\n\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<div className=\"credits\">\r\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\r\n                </div>\r\n\t\t\t\t</center>\r\n                </>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t<h2 align=\"center\">Quiz 7</h2>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n        <DragChart/>\r\n        </>\r\n\t);\r\n}","C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\modulesData.js",[],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz8.js",["136","137","138","139","140","141","142","143"],"C:\\Users\\troy\\source\\repos\\VCU-Machine-Learning\\econ-learning\\src\\components\\quizzes\\Quiz1.js",["144","145","146","147","148","149","150","151","152","153"],{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":15},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":28,"column":20,"nodeType":"156","messageId":"157","endLine":28,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":29,"column":10,"nodeType":"156","messageId":"157","endLine":29,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":15},{"ruleId":"154","severity":1,"message":"169","line":12,"column":8,"nodeType":"156","messageId":"157","endLine":12,"endColumn":12},{"ruleId":"154","severity":1,"message":"170","line":13,"column":22,"nodeType":"156","messageId":"157","endLine":13,"endColumn":32},{"ruleId":"154","severity":1,"message":"171","line":1174,"column":5,"nodeType":"156","messageId":"157","endLine":1174,"endColumn":12},{"ruleId":"172","severity":1,"message":"173","line":1708,"column":23,"nodeType":"174","messageId":"175","endLine":1708,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":1745,"column":14,"nodeType":"156","messageId":"178","endLine":1745,"endColumn":15},{"ruleId":"154","severity":1,"message":"179","line":1781,"column":5,"nodeType":"156","messageId":"157","endLine":1781,"endColumn":7},{"ruleId":"154","severity":1,"message":"180","line":2035,"column":5,"nodeType":"156","messageId":"157","endLine":2035,"endColumn":12},{"ruleId":"154","severity":1,"message":"181","line":2288,"column":5,"nodeType":"156","messageId":"157","endLine":2288,"endColumn":7},{"ruleId":"154","severity":1,"message":"182","line":2636,"column":5,"nodeType":"156","messageId":"157","endLine":2636,"endColumn":11},{"ruleId":"172","severity":1,"message":"183","line":2752,"column":19,"nodeType":"174","messageId":"175","endLine":2752,"endColumn":21},{"ruleId":"172","severity":1,"message":"183","line":2758,"column":24,"nodeType":"174","messageId":"175","endLine":2758,"endColumn":26},{"ruleId":"172","severity":1,"message":"183","line":2764,"column":24,"nodeType":"174","messageId":"175","endLine":2764,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":15},{"ruleId":"154","severity":1,"message":"184","line":2,"column":17,"nodeType":"156","messageId":"157","endLine":2,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"164","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":3,"column":39,"nodeType":"156","messageId":"157","endLine":3,"endColumn":48},{"ruleId":"154","severity":1,"message":"158","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":5,"endColumn":11},{"ruleId":"154","severity":1,"message":"159","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":6,"endColumn":10},{"ruleId":"154","severity":1,"message":"160","line":8,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"161","line":9,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"162","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":27,"column":20,"nodeType":"156","messageId":"157","endLine":27,"endColumn":31},{"ruleId":"154","severity":1,"message":"185","line":28,"column":10,"nodeType":"156","messageId":"157","endLine":28,"endColumn":16},{"ruleId":"154","severity":1,"message":"186","line":28,"column":18,"nodeType":"156","messageId":"157","endLine":28,"endColumn":27},{"ruleId":"154","severity":1,"message":"164","line":29,"column":10,"nodeType":"156","messageId":"157","endLine":29,"endColumn":15},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'Redirect' is defined but never used.","'setUsername' is assigned a value but never used.","'error' is assigned a value but never used.","no-native-reassign",["187"],"no-negated-in-lhs",["188"],"'Zoom' is defined but never used.","'makeStyles' is defined but never used.","'numbers' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'v' is already defined.","redeclared","'Xt' is assigned a value but never used.","'matrixt' is assigned a value but never used.","'yt' is assigned a value but never used.","'result' is defined but never used.","Expected '===' and instead saw '=='.","'useContext' is defined but never used.","'module' is assigned a value but never used.","'setModule' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]