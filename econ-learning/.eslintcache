[{"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/index.js":"1","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Home.js":"2","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Help.js":"3","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz5.js":"4","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz7.js":"5","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz2.js":"6","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/Footer.js":"7","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/modulePagesDOM.js":"8","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/Button.js":"9","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/StyledModuleButton.js":"10","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Welcome.js":"11","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Modules.js":"12","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Login.js":"13","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz4.js":"14","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Register.js":"15","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz8.js":"16","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/TestingDragChart.js":"17","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz3.js":"18","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/modulesSelectionDOM.js":"19","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz6.js":"20","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/modulesData.js":"21","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/ChartSample.js":"22","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz1.js":"23","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/moduleProgress.js":"24","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/App.js":"25","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/progressBar.js":"26","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/ModuleProgress.js":"27","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/ModuleNavHeader.js":"28","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/NextModuleButton.js":"29","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/serviceWorker.js":"30","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/PrevModuleButton.js":"31"},{"size":503,"mtime":1616502798147,"results":"32","hashOfConfig":"33"},{"size":376,"mtime":1616502798148,"results":"34","hashOfConfig":"33"},{"size":133,"mtime":1613762563237,"results":"35","hashOfConfig":"33"},{"size":4501,"mtime":1616640664180,"results":"36","hashOfConfig":"33"},{"size":4123,"mtime":1616640664180,"results":"37","hashOfConfig":"33"},{"size":4115,"mtime":1616640664178,"results":"38","hashOfConfig":"33"},{"size":1202,"mtime":1614475108357,"results":"39","hashOfConfig":"33"},{"size":2519,"mtime":1617125160525,"results":"40","hashOfConfig":"33"},{"size":745,"mtime":1614475107464,"results":"41","hashOfConfig":"33"},{"size":810,"mtime":1613697292227,"results":"42","hashOfConfig":"33"},{"size":1455,"mtime":1617120874954,"results":"43","hashOfConfig":"33"},{"size":230,"mtime":1616502798150,"results":"44","hashOfConfig":"33"},{"size":1737,"mtime":1616502798149,"results":"45","hashOfConfig":"33"},{"size":4143,"mtime":1616640664179,"results":"46","hashOfConfig":"33"},{"size":2333,"mtime":1616502798150,"results":"47","hashOfConfig":"33"},{"size":4123,"mtime":1616640664181,"results":"48","hashOfConfig":"33"},{"size":59426,"mtime":1616624822458,"results":"49","hashOfConfig":"33"},{"size":4116,"mtime":1616640664178,"results":"50","hashOfConfig":"33"},{"size":1401,"mtime":1613752630735,"results":"51","hashOfConfig":"33"},{"size":4123,"mtime":1616640664180,"results":"52","hashOfConfig":"33"},{"size":70359,"mtime":1617139158836,"results":"53","hashOfConfig":"33"},{"size":8760,"mtime":1616624822457,"results":"54","hashOfConfig":"33"},{"size":4194,"mtime":1616640664175,"results":"55","hashOfConfig":"33"},{"size":894,"mtime":1617036632277,"results":"56","hashOfConfig":"33"},{"size":2333,"mtime":1616640664174,"results":"57","hashOfConfig":"33"},{"size":1043,"mtime":1617037484933,"results":"58","hashOfConfig":"33"},{"size":1809,"mtime":1617119449822,"results":"59","hashOfConfig":"33"},{"size":1207,"mtime":1613697087309,"results":"60","hashOfConfig":"33"},{"size":1451,"mtime":1613697205461,"results":"61","hashOfConfig":"33"},{"size":5086,"mtime":1616502798151,"results":"62","hashOfConfig":"33"},{"size":1451,"mtime":1613697255867,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"18r9eim",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/index.js",[],["148","149"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Home.js",["150","151"],"import React, { useContext } from \"react\";\nimport Chart from '../components/ChartSample'\nimport DragChart from '../components/TestingDragChart'\nimport Footer from '../components/Footer'\n\nfunction Home() {\n    return (\n        <>\n        <h1 align=\"center\">Home</h1>\n        Welcome Student!\n        <DragChart/>    \n\n        <Footer/>\n        </>\n\n    )\n}\n\nexport default Home",["152","153"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Help.js",[],["154","155"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz5.js",["156","157","158","159","160","161","162","163","164"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\n  import DragChart from '../TestingDragChart'\n  import {modulesData} from '../../components/modulesData'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz5() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: modulesData[4].QuizPool[0][0],\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][1], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][2], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][3], isCorrect: true },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[0][4], isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: modulesData[4].QuizPool[1][0],\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][1], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][2], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][3], isCorrect: true },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[1][4], isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: modulesData[4].QuizPool[2][0],\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][1], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][2], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][3], isCorrect: true },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[2][4], isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: modulesData[4].QuizPool[3][0],\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][1], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][2], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][3], isCorrect: true },\n\t\t\t\t{ answerText: modulesData[4].QuizPool[3][4], isCorrect: false },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz5 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz5`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n  const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\t\tQuiz 5\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n                <form onClick={Quiz5}>\n                <h4><Link to=\"/modules/5/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}",["165","166"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz7.js",["167","168","169","170","171","172","173","174","175"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\n  import DragChart from '../TestingDragChart'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz7() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz7 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz7`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n  const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\t\tQuiz 7\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n                <form onClick={Quiz7}>\n                <h4><Link to=\"/modules/7/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}",["176","177"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz2.js",["178","179","180","181","182","183","184","185","186"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\n  import DragChart from '../TestingDragChart'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz2() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz2 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz2`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n   const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n                <form onClick={Quiz2}>\n                <h4><Link to=\"/modules/2/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/Footer.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/modulePagesDOM.js",["187","188","189","190"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/Button.js",[],["191","192"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/StyledModuleButton.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Welcome.js",["193","194","195"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Welcome.css';\nimport { CredentialsContext } from \"../App\";\nimport DragChart from '../components/TestingDragChart'\nimport ModuleProgress from '../components/ModuleProgress'\nimport Footer from '../components/Footer'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Welcome() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const logout = () => {\n    setCredentials(null);\n  };\n\n  return (\n    <>\n    <div >\n      <h1>Welcome {credentials && credentials.username}</h1>\n      {!credentials && <Link class=\"registerBt\" to=\"/register\">Register</Link>}\n      <br />\n      {!credentials && <Link class=\"loginBt\" to=\"/login\">Login</Link>}\n      <div class =\"wrapper\">\n      {credentials && <button class=\"logoutBtn\" onClick={logout}>Logout</button>}\n      {credentials && `Tokens:`}\n      </div>\n    </div>\n    <br/><br/><br/><br/>\n    {!credentials && '<br/><br/><br/>' && <center><img width = \"1000px\" height = \"550px\" src=\"images/codeva.jpeg\"/></center>}\n    {credentials && <ModuleProgress m1={50} m2={40} m3={20} m4={80} m5={100} m6={90} m7={10} m8={50}/> }\n    {credentials && '<br/><br/><br/>' && <DragChart/>} \n    {!credentials && <Footer/>}\n    </>\n  );\n}\n","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Modules.js",["196"],"import ModulesSelection from '../components/modulesSelectionDOM.js';\nimport React, { useContext } from \"react\";\n\nexport default function Modules() {\n    return (\n        <div>\n            <ModulesSelection/>\n        </div>\n    )\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Login.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz4.js",["197","198","199","200","201","202","203","204","205"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\n  import DragChart from '../TestingDragChart'\n  import {modulesData} from '../../components/modulesData'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz4() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: modulesData[3].QuizPool[0][0],\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][1], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][2], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][3], isCorrect: true },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[0][4], isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: modulesData[3].QuizPool[1][0],\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][1], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][2], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][3], isCorrect: true },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[1][4], isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: modulesData[3].QuizPool[2][0],\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][1], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][2], isCorrect: false },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][3], isCorrect: true },\n\t\t\t\t{ answerText: modulesData[3].QuizPool[2][4], isCorrect: false },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz4 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz4`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n  const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\t\tQuiz 4\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n                <form onClick={Quiz4}>\n                <h4><Link to=\"/modules/4/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/pages/Register.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz8.js",["206","207","208","209","210","211","212","213","214"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\n  import DragChart from '../TestingDragChart'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz8() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz8 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz8`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n  const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\t\tQuiz 8\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n                <form onClick={Quiz8}>\n                <h4><Link to=\"/modules/8/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}",["215","216"],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/TestingDragChart.js",["217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './ChartSample.css';\nimport { create, all } from 'mathjs';\n//import 'child_process';\nconst math = create(all)\n\nconst options = {\n    title: {\n        display: true,\n        text: 'Stock price',\n        fontSize: 20\n    },\n    legend: {\n        display: true,\n        position: 'right'\n    },\n    tooltips: { enabled: true },\n    scales: {\n        xAxes: [{\n            gridLines: { dispaly: false, color: '#9B9B9B', },\n            ticks: { fontColor: '#9B9B9B', fontSize: 14, },\n        }],\n        yAxes: [{\n            scaleLabel: { display: false },\n            ticks: {\n                display: true,\n                min: 30,\n                max: 85,\n                scaleSteps: 50,\n                scaleStartValue: -50,\n                maxTicksLimit: 8,\n                fontColor: '#9B9B9B',\n                padding: 0,\n                callback: point => (point < 0 ? '' : point),\n            }\n        }],\n    },\n    //dragData: true,\n    //onDragStart: function (e) {\n    //    console.log(e)\n    //},\n    //onDrag: function (e, datasetIndex, index, value) {\n    //    console.log(datasetIndex, index, value)\n    //},\n    //onDragEnd: function (e, datasetIndex, index, value) {\n    //    console.log(datasetIndex, index, value)\n    //},\n    maintainAspectRatio: false,\n    responsive: true\n};\n\nvar fiveLabel = {\n    labels: [\n        '1 / 3 / 2017',\n        '1 / 4 / 2017',\n        '1 / 5 / 2017',\n        '1 / 6 / 2017',\n        '1 / 9 / 2017',\n        '1 / 10 / 2017',\n        '1 / 11 / 2017',\n        '1 / 12 / 2017',\n        '1 / 13 / 2017',\n        '1 / 17 / 2017',\n        '1 / 18 / 2017',\n        '1 / 19 / 2017',\n        '1 / 20 / 2017',\n        '1 / 23 / 2017',\n        '1 / 24 / 2017',\n        '1 / 25 / 2017',\n        '1 / 26 / 2017',\n        '1 / 27 / 2017',\n        '1 / 30 / 2017',\n        '1 / 31 / 2017',\n        '2 / 1 / 2017',\n        '2 / 2 / 2017',\n        '2 / 3 / 2017',\n        '2 / 6 / 2017',\n        '2 / 7 / 2017',\n        '2 / 8 / 2017',\n        '2 / 9 / 2017',\n        '2 / 10 / 2017',\n        '2 / 13 / 2017',\n        '2 / 14 / 2017',\n        '2 / 15 / 2017',\n        '2 / 16 / 2017',\n        '2 / 17 / 2017',\n        '2 / 21 / 2017',\n        '2 / 22 / 2017',\n        '2 / 23 / 2017',\n        '2 / 24 / 2017',\n        '2 / 27 / 2017',\n        '2 / 28 / 2017',\n        '3 / 1 / 2017',\n        '3 / 2 / 2017',\n        '3 / 3 / 2017',\n        '3 / 6 / 2017',\n        '3 / 7 / 2017',\n        '3 / 8 / 2017',\n        '3 / 9 / 2017',\n        '3 / 10 / 2017',\n        '3 / 13 / 2017',\n        '3 / 14 / 2017',\n        '3 / 15 / 2017',\n        '3 / 16 / 2017',\n        '3 / 17 / 2017',\n        '3 / 20 / 2017',\n        '3 / 21 / 2017',\n        '3 / 22 / 2017',\n        '3 / 23 / 2017',\n        '3 / 24 / 2017',\n        '3 / 27 / 2017',\n        '3 / 28 / 2017',\n        '3 / 29 / 2017',\n        '3 / 30 / 2017',\n        '3 / 31 / 2017',\n        '4 / 3 / 2017',\n        '4 / 4 / 2017',\n        '4 / 5 / 2017',\n        '4 / 6 / 2017',\n        '4 / 7 / 2017',\n        '4 / 10 / 2017',\n        '4 / 11 / 2017',\n        '4 / 12 / 2017',\n        '4 / 13 / 2017',\n        '4 / 17 / 2017',\n        '4 / 18 / 2017',\n        '4 / 19 / 2017',\n        '4 / 20 / 2017',\n        '4 / 21 / 2017',\n        '4 / 24 / 2017',\n        '4 / 25 / 2017',\n        '4 / 26 / 2017',\n        '4 / 27 / 2017',\n        '4 / 28 / 2017',\n        '5 / 1 / 2017',\n        '5 / 2 / 2017',\n        '5 / 3 / 2017',\n        '5 / 4 / 2017',\n        '5 / 5 / 2017',\n        '5 / 8 / 2017',\n        '5 / 9 / 2017',\n        '5 / 10 / 2017',\n        '5 / 11 / 2017',\n        '5 / 12 / 2017',\n        '5 / 15 / 2017',\n        '5 / 16 / 2017',\n        '5 / 17 / 2017',\n        '5 / 18 / 2017',\n        '5 / 19 / 2017',\n        '5 / 22 / 2017',\n        '5 / 23 / 2017',\n        '5 / 24 / 2017',\n        '5 / 25 / 2017',\n        '5 / 26 / 2017',\n        '5 / 30 / 2017',\n        '5 / 31 / 2017',\n        '6 / 1 / 2017',\n        '6 / 2 / 2017',\n        '6 / 5 / 2017',\n        '6 / 6 / 2017',\n        '6 / 7 / 2017',\n        '6 / 8 / 2017',\n        '6 / 9 / 2017',\n        '6 / 12 / 2017',\n        '6 / 13 / 2017',\n        '6 / 14 / 2017',\n        '6 / 15 / 2017',\n        '6 / 16 / 2017',\n        '6 / 19 / 2017',\n        '6 / 20 / 2017',\n        '6 / 21 / 2017',\n        '6 / 22 / 2017',\n        '6 / 23 / 2017',\n        '6 / 26 / 2017',\n        '6 / 27 / 2017',\n        '6 / 28 / 2017',\n        '6 / 29 / 2017',\n        '6 / 30 / 2017',\n        '7 / 3 / 2017',\n        '7 / 5 / 2017',\n        '7 / 6 / 2017',\n        '7 / 7 / 2017',\n        '7 / 10 / 2017',\n        '7 / 11 / 2017',\n        '7 / 12 / 2017',\n        '7 / 13 / 2017',\n        '7 / 14 / 2017',\n        '7 / 17 / 2017',\n        '7 / 18 / 2017',\n        '7 / 19 / 2017',\n        '7 / 20 / 2017',\n        '7 / 21 / 2017',\n        '7 / 24 / 2017',\n        '7 / 25 / 2017',\n        '7 / 26 / 2017',\n        '7 / 27 / 2017',\n        '7 / 28 / 2017',\n        '7 / 31 / 2017',\n        '8 / 1 / 2017',\n        '8 / 2 / 2017',\n        '8 / 3 / 2017',\n        '8 / 4 / 2017',\n        '8 / 7 / 2017',\n        '8 / 8 / 2017',\n        '8 / 9 / 2017',\n        '8 / 10 / 2017',\n        '8 / 11 / 2017',\n        '8 / 14 / 2017',\n        '8 / 15 / 2017',\n        '8 / 16 / 2017',\n        '8 / 17 / 2017',\n        '8 / 18 / 2017',\n        '8 / 21 / 2017',\n        '8 / 22 / 2017',\n        '8 / 23 / 2017',\n        '8 / 24 / 2017',\n        '8 / 25 / 2017',\n        '8 / 28 / 2017',\n        '8 / 29 / 2017',\n        '8 / 30 / 2017',\n        '8 / 31 / 2017',\n        '9 / 1 / 2017',\n        '9 / 5 / 2017',\n        '9 / 6 / 2017',\n        '9 / 7 / 2017',\n        '9 / 8 / 2017',\n        '9 / 11 / 2017',\n        '9 / 12 / 2017',\n        '9 / 13 / 2017',\n        '9 / 14 / 2017',\n        '9 / 15 / 2017',\n        '9 / 18 / 2017',\n        '9 / 19 / 2017',\n        '9 / 20 / 2017',\n        '9 / 21 / 2017',\n        '9 / 22 / 2017',\n        '9 / 25 / 2017',\n        '9 / 26 / 2017',\n        '9 / 27 / 2017',\n        '9 / 28 / 2017',\n        '9 / 29 / 2017',\n        '10 / 2 / 2017',\n        '10 / 3 / 2017',\n        '10 / 4 / 2017',\n        '10 / 5 / 2017',\n        '10 / 6 / 2017',\n        '10 / 9 / 2017',\n        '10 / 10 / 2017',\n        '10 / 11 / 2017',\n        '10 / 12 / 2017',\n        '10 / 13 / 2017',\n        '10 / 16 / 2017',\n        '10 / 17 / 2017',\n        '10 / 18 / 2017',\n        '10 / 19 / 2017',\n        '10 / 20 / 2017',\n        '10 / 23 / 2017',\n        '10 / 24 / 2017',\n        '10 / 25 / 2017',\n        '10 / 26 / 2017',\n        '10 / 27 / 2017',\n        '10 / 30 / 2017',\n        '10 / 31 / 2017',\n        '11 / 1 / 2017',\n        '11 / 2 / 2017',\n        '11 / 3 / 2017',\n        '11 / 6 / 2017',\n        '11 / 7 / 2017',\n        '11 / 8 / 2017',\n        '11 / 9 / 2017',\n        '11 / 10 / 2017',\n        '11 / 13 / 2017',\n        '11 / 14 / 2017',\n        '11 / 15 / 2017',\n        '11 / 16 / 2017',\n        '11 / 17 / 2017',\n        '11 / 20 / 2017',\n        '11 / 21 / 2017',\n        '11 / 22 / 2017',\n        '11 / 24 / 2017',\n        '11 / 27 / 2017',\n        '11 / 28 / 2017',\n        '11 / 29 / 2017',\n        '11 / 30 / 2017',\n        '12 / 1 / 2017',\n        '12 / 4 / 2017',\n        '12 / 5 / 2017',\n        '12 / 6 / 2017',\n        '12 / 7 / 2017',\n        '12 / 8 / 2017',\n        '12 / 11 / 2017',\n        '12 / 12 / 2017',\n        '12 / 13 / 2017',\n        '12 / 14 / 2017',\n        '12 / 15 / 2017',\n        '12 / 18 / 2017',\n        '12 / 19 / 2017',\n        '12 / 20 / 2017',\n        '12 / 21 / 2017',\n        '12 / 22 / 2017',\n        '12 / 26 / 2017',\n        '12 / 27 / 2017',\n        '12 / 28 / 2017',\n        '12 / 29 / 2017',\n    ]\n};\n\nvar tenLabel = {\n    labels: ['January', 'February', 'March',\n        'April', 'May', 'June', 'July', 'August', 'September', 'October']\n};\n\nvar fifteenLabel = {\n    labels: ['January', 'February', 'March',\n        'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'January', 'February', 'March']\n};\n\nvar fiveActual = {\n    dataSet: [\n        40.290001,\n        40.349998,\n        41.43,\n        41.240002,\n        41.490002,\n        41.400002,\n        41.23,\n        41.279999,\n        41.650002,\n        41.599998,\n        41.41,\n        41.25,\n        41.389999,\n        41.860001,\n        41.950001,\n        42.360001,\n        42.360001,\n        41,\n        40.169998,\n        39.700001,\n        39.959999,\n        39.400002,\n        39.790001,\n        39.639999,\n        40.009998,\n        40.18,\n        40.439999,\n        40.82,\n        40.830002,\n        41.18,\n        41.689999,\n        41.869999,\n        41.919998,\n        41.93,\n        42.299999,\n        42.369999,\n        42.110001,\n        42.889999,\n        42.490002,\n        42.310001,\n        42.400002,\n        42.700001,\n        42.98,\n        42.799999,\n        42.84,\n        42.66,\n        43.189999,\n        42.869999,\n        42.509998,\n        42.290001,\n        42.5,\n        42.57,\n        43.099998,\n        43.330002,\n        42.595001,\n        43.130001,\n        43.48,\n        42.689999,\n        42.869999,\n        43.150002,\n        43.150002,\n        43.439999,\n        43.200001,\n        42.740002,\n        42.830002,\n        42.900002,\n        42.889999,\n        43.07,\n        42.990002,\n        42.099998,\n        42.5,\n        42.599998,\n        43.200001,\n        43.029999,\n        43.32,\n        43.860001,\n        44.09,\n        44.490002,\n        45.040001,\n        47.25,\n        47.029999,\n        47.389999,\n        47.41,\n        49.16,\n        48.93,\n        48.619999,\n        49.43,\n        49.060001,\n        49.18,\n        49.630001,\n        49.580002,\n        49.310001,\n        49.630001,\n        49.869999,\n        49.029999,\n        49.150002,\n        49.450001,\n        49.900002,\n        50.23,\n        50.77,\n        51.040001,\n        50.959999,\n        51.130001,\n        52.48,\n        53.439999,\n        53.77,\n        53.75,\n        53.299999,\n        54.029999,\n        54.650002,\n        52.810001,\n        52.290001,\n        52,\n        51.439999,\n        52.040001,\n        52.279999,\n        52.84,\n        52.990002,\n        53.709999,\n        53.82,\n        54.439999,\n        53.599998,\n        52.75,\n        53.810001,\n        53.599998,\n        54.139999,\n        53,\n        54.220001,\n        53.700001,\n        54.91,\n        54.919998,\n        56.599998,\n        57.299999,\n        58.139999,\n        57.529999,\n        57.5,\n        58.310001,\n        58.75,\n        59,\n        58.900002,\n        58.73,\n        58.48,\n        61,\n        59.799999,\n        59.369999,\n        59,\n        59.669998,\n        59.16,\n        58.619999,\n        59.18,\n        59.610001,\n        58.970001,\n        59.240002,\n        57.849998,\n        58.610001,\n        59.299999,\n        59.950001,\n        60.150002,\n        59.360001,\n        59.330002,\n        59.720001,\n        60.299999,\n        60.220001,\n        60.330002,\n        60.310001,\n        59.82,\n        61.049999,\n        62,\n        61.98,\n        61.259998,\n        61.740002,\n        61.330002,\n        61.939999,\n        61.73,\n        62.950001,\n        62.470001,\n        62.040001,\n        62.27,\n        62.619999,\n        63.009998,\n        63.990002,\n        64.669998,\n        64.330002,\n        65,\n        63.709999,\n        63.41,\n        63.619999,\n        63.860001,\n        64.5,\n        64.510002,\n        64.300003,\n        64.379997,\n        66,\n        66.199997,\n        66.599998,\n        67.25,\n        68.019997,\n        69.489998,\n        69.040001,\n        67.650002,\n        67.400002,\n        67.300003,\n        71.330002,\n        71.019997,\n        69.730003,\n        69.940002,\n        71.459999,\n        71.720001,\n        71.449997,\n        71.339996,\n        72.779999,\n        72.459999,\n        72.370003,\n        73.720001,\n        75.169998,\n        74,\n        74.019997,\n        73.769997,\n        73.610001,\n        74.099998,\n        74.300003,\n        75.5,\n        78.010002,\n        76.599998,\n        77.089996,\n        77.900002,\n        77.809998,\n        78.629997,\n        77.949997,\n        77.949997,\n        73.769997,\n        75.220001,\n        75.589996,\n        69.809998,\n        70.889999,\n        73.25,\n        74.709999,\n        72.959999,\n        73.449997,\n        74.080002,\n        74.5,\n        74.82,\n        76.300003,\n        75.389999,\n        74.639999,\n        74.190002,\n        73.800003,\n        73.290001,\n        74.25,\n        74.959999,\n        73.919998\n    ]\n};\n\nvar numbers;\n\nvar MLArrayFirstGraph = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    128,\n    129,\n    130,\n    131,\n    132,\n    133,\n    134,\n    135,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    144,\n    145,\n    146,\n    147,\n    148,\n    149,\n    150,\n    151,\n    152,\n    153,\n    154,\n    155,\n    156,\n    157,\n    158,\n    159,\n    160,\n    161,\n    162,\n    163,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    179,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    192,\n    193,\n    194,\n    195,\n    196,\n    197,\n    198,\n    199,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    209,\n    210,\n    211,\n    212,\n    213,\n    214,\n    215,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    224,\n    225,\n    226,\n    227,\n    228,\n    229,\n    230,\n    231,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    241,\n    242,\n    243,\n    244,\n    245,\n    246,\n    247,\n    248,\n    249,\n    250,\n    251]\n\nvar fiveMachine = {\n    dataSet: findLineByLeastSquares(MLArrayFirstGraph, fiveActual.dataSet)\n};\n\nvar tenActual = {\n    dataSet: [65, 59, 80, 81, 56, 50, 40, 45, 55, 60]\n};\n\nvar tenMachine = {\n    dataSet: [15, 25, 40, 50, 49, 50, 55, 50, 55, 50]\n};\n\nvar fifteenActual = {\n    dataSet: [65, 59, 80, 81, 56, 50, 40, 45, 55, 60, 70, 75, 70, 62, 60]\n};\n\nvar fifteenMachine = {\n    dataSet: [15, 25, 40, 50, 49, 50, 55, 50, 55, 50, 68, 71, 78, 80, 75]\n};\n\nfunction findLineByLeastSquares(values_x, values_y) {\n    var sum_x = 0;\n    var sum_y = 0;\n    var sum_xy = 0;\n    var sum_xx = 0;\n    var count = 0;\n\n    /*\n     * We'll use those variables for faster read/write access.\n     */\n    var x = 0;\n    var y = 0;\n    var values_length = values_x.length;\n\n    if (values_length != values_y.length) {\n        throw new Error('The parameters values_x and values_y need to have same size!');\n    }\n\n    /*\n     * Nothing to do.\n     */\n    if (values_length === 0) {\n        return [[], []];\n    }\n\n    /*\n     * Calculate the sum for each of the parts necessary.\n     */\n    for (var v = 0; v < values_length; v++) {\n        x = values_x[v];\n        y = values_y[v];\n        sum_x += x;\n        sum_y += y;\n        sum_xx += x * x;\n        sum_xy += x * y;\n        count++;\n    }\n\n    /*\n     * Calculate m and b for the formular:\n     * y = x * m + b\n     */\n    var m = (count * sum_xy - sum_x * sum_y) / (count * sum_xx - sum_x * sum_x);\n    var b = (sum_y / count) - (m * sum_x) / count;\n\n    /*\n     * We will make the x and y result line now\n     */\n    var result_values_x = [];\n    var result_values_y = [];\n\n    for (var v = 0; v < values_length; v++) {\n        x = values_x[v];\n        y = x * m + b;\n        result_values_x.push(x);\n        result_values_y.push(y);\n    }\n\n    //console.log([result_values_y]);\n\n    return result_values_y;\n}\n\nvar matrix = [\n    [34.62365962451697, 78.0246928153624, 0],\n    [30.28671076822607, 43.89499752400101, 0],\n    [35.84740876993872, 72.90219802708364, 0],\n    [60.18259938620976, 86.30855209546826, 1],\n    [79.0327360507101, 75.3443764369103, 1],\n]\n\nvar X = [\n    [34.62365962451697, 78.0246928153624],\n    [30.28671076822607, 43.89499752400101],\n    [35.84740876993872, 72.90219802708364],\n    [60.18259938620976, 86.30855209546826],\n    [79.0327360507101, 75.3443764369103],\n]\n\nvar y = [\n    [0],\n    [0],\n    [0],\n    [1],\n    [1],\n]\n\nvar Xt = [\n    [40.290001, 40.98, 40, 40.25, 40.25, 8247400,],\n    [40.349998, 41.029999, 40.044998, 41, 41, 6806400,],\n    [41.43, 41.720001, 41.040001, 41.060001, 41.060001, 6432000,],\n    [41.240002, 41.639999, 40.790001, 41.450001, 41.450001, 5586400,],\n    [41.490002, 41.509998, 41.110001, 41.400002, 41.400002, 3943900,],\n    [41.400002, 41.549999, 41.07, 41.080002, 41.080002, 4174900,],\n    [41.23, 41.380001, 40.834999, 41.279999, 41.279999, 4425300,],\n    [41.279999, 41.605, 40.919998, 41.560001, 41.560001, 3840500,],\n    [41.650002, 41.84, 41.529999, 41.599998, 41.599998, 3917700,],\n    [41.599998, 41.709999, 41.200001, 41.27, 41.27, 5932900,],\n    [41.41, 41.490002, 41.110001, 41.349998, 41.349998, 4706000,],\n    [41.25, 41.68, 41.029999, 41.27, 41.27, 4717600,],\n    [41.389999, 41.720001, 41.299999, 41.689999, 41.689999, 6868500,],\n    [41.860001, 42.110001, 41.25, 41.619999, 41.619999, 8497100,],\n    [41.950001, 42.040001, 41.529999, 41.959999, 41.959999, 6106500,],\n    [42.360001, 42.439999, 41.66, 41.709999, 41.709999, 8604000,],\n    [42.360001, 42.5, 41.285, 41.5, 41.5, 11838100,],\n    [41, 41.200001, 39.919998, 40.27, 40.27, 22749200,],\n    [40.169998, 40.27, 39.419998, 39.860001, 39.860001, 11486000,],\n    [39.700001, 40.009998, 39.450001, 39.779999, 39.779999, 9100100,],\n    [39.959999, 40, 39.110001, 39.310001, 39.310001, 8860400,],\n    [39.400002, 39.84, 39.02, 39.580002, 39.580002, 8736800,],\n    [39.790001, 39.93, 39.549999, 39.59, 39.59, 7131100,],\n    [39.639999, 39.830002, 39.34, 39.740002, 39.740002, 8206400,],\n    [40.009998, 40.34, 39.700001, 40.02, 40.02, 7956300,],\n    [40.18, 40.990002, 39.919998, 40.880001, 40.880001, 7399000,],\n    [40.439999, 40.994999, 40.299999, 40.830002, 40.830002, 6467600,],\n    [40.82, 40.860001, 40.560001, 40.580002, 40.580002, 6248200,],\n    [40.830002, 41.299999, 40.740002, 41.169998, 41.169998, 6260900,],\n    [41.18, 41.630001, 40.939999, 41.619999, 41.619999, 6496400,],\n    [41.689999, 41.93, 41.27, 41.869999, 41.869999, 7124600,],\n    [41.869999, 42.310001, 41.700001, 42.150002, 42.150002, 5730800,],\n    [41.919998, 42.299999, 41.799999, 41.959999, 41.959999, 5106000,],\n    [41.93, 42.560001, 41.900002, 42.43, 42.43, 5874700,],\n    [42.299999, 42.529999, 42.119999, 42.419998, 42.419998, 4316200,],\n    [42.369999, 42.669998, 42.16, 42.529999, 42.529999, 5456300,],\n    [42.110001, 43.07, 41.830002, 43.07, 43.07, 6769500,],\n    [42.889999, 42.889999, 42.349998, 42.639999, 42.639999, 5026700,],\n    [42.490002, 42.490002, 41.990002, 42, 42, 6956800,],\n    [42.310001, 42.52, 41.990002, 42.43, 42.43, 6003800,],\n    [42.400002, 42.860001, 42.200001, 42.77, 42.77, 4572300,],\n    [42.700001, 43.040001, 42.580002, 43.029999, 43.029999, 4214400,],\n    [42.98, 43.029999, 42.630001, 42.869999, 42.869999, 6032800,],\n    [42.799999, 43.200001, 42.709999, 42.889999, 42.889999, 4404700,],\n    [42.84, 43.18, 42.720001, 42.790001, 42.790001, 4573900,],\n    [42.66, 43, 42.450001, 42.919998, 42.919998, 3487900,],\n    [43.189999, 43.279999, 42.759998, 42.990002, 42.990002, 4636200,],\n    [42.869999, 42.965, 42.450001, 42.59, 42.59, 5526900,],\n    [42.509998, 42.639999, 41.740002, 42.099998, 42.099998, 5888000,],\n    [42.290001, 42.57, 41.889999, 42.389999, 42.389999, 4291800,],\n    [42.5, 42.580002, 42.139999, 42.400002, 42.400002, 3998600,],\n    [42.57, 43.299999, 42.369999, 43.080002, 43.080002, 12307900,],\n    [43.099998, 43.32, 42.810001, 43.16, 43.16, 6686900,],\n    [43.330002, 43.400002, 42.459999, 42.639999, 42.639999, 7758400,],\n    [42.595001, 43.240002, 42.450001, 43.189999, 43.189999, 6513300,],\n    [43.130001, 43.610001, 43, 43.139999, 43.139999, 7176400,],\n    [43.48, 43.494999, 42.935001, 43.130001, 43.130001, 5739500,],\n    [42.689999, 43.200001, 42.580002, 43.080002, 43.080002, 3850300,],\n    [42.869999, 43.25, 42.84, 43.150002, 43.150002, 4396500,],\n    [43.150002, 43.299999, 42.959999, 43.240002, 43.240002, 3951100,],\n    [43.150002, 43.799999, 43, 43.540001, 43.540001, 5691700,],\n    [43.439999, 43.48, 43.009998, 43.02, 43.02, 5177500,],\n    [43.200001, 43.299999, 42.509998, 42.630001, 42.630001, 7773000,],\n    [42.740002, 42.740002, 42.259998, 42.720001, 42.720001, 4681800,],\n    [42.830002, 43.342999, 42.740002, 42.889999, 42.889999, 5292300,],\n    [42.900002, 43, 42.720001, 42.900002, 42.900002, 5395400,],\n    [42.889999, 43.174999, 42.709999, 43.040001, 43.040001, 4861200,],\n    [43.07, 43.549999, 43.009998, 43.049999, 43.049999, 4579500,],\n    [42.990002, 43.09, 42.610001, 42.689999, 42.689999, 4856300,],\n    [42.099998, 42.810001, 42.060001, 42.490002, 42.490002, 5800100,],\n    [42.5, 42.889999, 42.32, 42.549999, 42.549999, 3631400,],\n    [42.599998, 43.139999, 42.599998, 43.099998, 43.099998, 3151600,],\n    [43.200001, 43.200001, 42.860001, 43.09, 43.09, 3711600,],\n    [43.029999, 43.470001, 42.900002, 43.299999, 43.299999, 4913900,],\n    [43.32, 43.799999, 43.259998, 43.689999, 43.689999, 4811200,],\n    [43.860001, 44, 43.599998, 43.810001, 43.810001, 5595700,],\n    [44.09, 44.279999, 43.950001, 44.27, 44.27, 4643800,],\n    [44.490002, 45.009998, 44.349998, 44.709999, 44.709999, 7827900,],\n    [45.040001, 45.040001, 44.25, 44.41, 44.41, 9846900,],\n    [47.25, 48.099998, 46.75, 47.150002, 47.150002, 34420200,],\n    [47.029999, 47.755001, 46.869999, 47.720001, 47.720001, 11642800,],\n    [47.389999, 47.713001, 47.32, 47.540001, 47.540001, 14537500,],\n    [47.41, 49.07, 47.400002, 49.049999, 49.049999, 16820800,],\n    [49.16, 49.290001, 48.625, 49.02, 49.02, 11613100,],\n    [48.93, 49.380001, 48.82, 48.91, 48.91, 7148800,],\n    [48.619999, 49.439999, 48.400002, 49.299999, 49.299999, 4876200,],\n    [49.43, 49.450001, 48.810001, 49.169998, 49.169998, 6641000,],\n    [49.060001, 49.369999, 48.900002, 49.220001, 49.220001, 4774000,],\n    [49.18, 49.799999, 49.014999, 49.790001, 49.790001, 6507700,],\n    [49.630001, 49.709999, 49.110001, 49.700001, 49.700001, 5547700,],\n    [49.580002, 49.75, 49.240002, 49.369999, 49.369999, 4933700,],\n    [49.310001, 50, 49.25, 49.77, 49.77, 4705900,],\n    [49.630001, 50.349998, 49.57, 50.34, 50.34, 5347200,],\n    [49.869999, 50.099998, 49.025002, 49.049999, 49.049999, 6598400,],\n    [49.029999, 49.580002, 48.889999, 49.110001, 49.110001, 9932100,],\n    [49.150002, 49.709999, 49.060001, 49.389999, 49.389999, 7813800,],\n    [49.450001, 49.880001, 49.349998, 49.77, 49.77, 13144900,],\n    [49.900002, 50.18, 49.77, 50.130001, 50.130001, 7134200,],\n    [50.23, 51.080002, 50.139999, 51.049999, 51.049999, 6274800,],\n    [50.77, 51.130001, 50.639999, 50.93, 50.93, 4950500,],\n    [51.040001, 51.389999, 50.889999, 51.189999, 51.189999, 4780800,],\n    [50.959999, 51.279999, 50.860001, 51.060001, 51.060001, 5550300,],\n    [51.130001, 52.240002, 50.880001, 52.209999, 52.209999, 11107200,],\n    [52.48, 53.389999, 52.474998, 53.16, 53.16, 13898300,],\n    [53.439999, 53.639999, 53.080002, 53.52, 53.52, 9121800,],\n    [53.77, 54.07, 53.59, 53.799999, 53.799999, 9656400,],\n    [53.75, 53.799999, 53.16, 53.400002, 53.400002, 6308000,],\n    [53.299999, 53.939999, 53.259998, 53.849998, 53.849998, 6368700,],\n    [54.029999, 54.43, 53.450001, 54.389999, 54.389999, 6369900,],\n    [54.650002, 55.139999, 52.849998, 53.400002, 53.400002, 11174100,],\n    [52.810001, 52.900002, 51.43, 52.16, 52.16, 15765600,],\n    [52.290001, 52.485001, 51.700001, 52.060001, 52.060001, 10411800,],\n    [52, 52.505001, 51.535, 51.900002, 51.900002, 7132500,],\n    [51.439999, 52.380001, 50.830002, 52.290001, 52.290001, 12401600,],\n    [52.040001, 52.16, 51.580002, 51.84, 51.84, 10931000,],\n    [52.279999, 53, 52.110001, 52.93, 52.93, 5643900,],\n    [52.84, 53.23, 52.43, 52.52, 52.52, 4578700,],\n    [52.990002, 53.580002, 52.610001, 53.540001, 53.540001, 8016500,],\n    [53.709999, 53.951, 52.860001, 53.869999, 53.869999, 9673000,],\n    [53.82, 54.529999, 53.689999, 54.330002, 54.330002, 6257300,],\n    [54.439999, 55.099998, 53.650002, 53.740002, 53.740002, 4890300,],\n    [53.599998, 53.790001, 52.639999, 52.73, 52.73, 7706800,],\n    [52.75, 54.439999, 52.650002, 54.389999, 54.389999, 7934300,],\n    [53.810001, 54.099998, 52.52, 53.419998, 53.419998, 11616200,],\n    [53.599998, 54.25, 53.290001, 53.669998, 53.669998, 8235000,],\n    [54.139999, 54.330002, 52.830002, 52.869999, 52.869999, 4831300,],\n    [53, 54.75, 52.939999, 54.610001, 54.610001, 9800600,],\n    [54.220001, 54.351002, 53.150002, 53.470001, 53.470001, 7447900,],\n    [53.700001, 54.48, 53.52, 53.970001, 53.970001, 4948100,],\n    [54.91, 55.419998, 54.700001, 54.939999, 54.939999, 10469600,],\n    [54.919998, 55.200001, 54.330002, 54.759998, 54.759998, 9011500,],\n    [56.599998, 57.445, 55.549999, 56.549999, 56.549999, 17490800,],\n    [57.299999, 57.91, 56.799999, 57.900002, 57.900002, 14795500,],\n    [58.139999, 58.630001, 56.915001, 57.16, 57.16, 11777100,],\n    [57.529999, 57.599998, 57.02, 57.580002, 57.580002, 5803300,],\n    [57.5, 58.959999, 57.310001, 58.959999, 58.959999, 9477500,],\n    [58.310001, 58.619999, 57.549999, 58.349998, 58.349998, 9706700,],\n    [58.75, 59.380001, 58.43, 59.09, 59.09, 8057400,],\n    [59, 59.330002, 58.59, 58.669998, 58.669998, 7545000,],\n    [58.900002, 59.07, 58.34, 58.580002, 58.580002, 6429300,],\n    [58.73, 58.830002, 58.189999, 58.259998, 58.259998, 8514000,],\n    [58.48, 58.939999, 57.900002, 58.790001, 58.790001, 13615600,],\n    [61, 61.299999, 57.692001, 60.150002, 60.150002, 22713400,],\n    [59.799999, 60.709999, 59.040001, 59.200001, 59.200001, 10800800,],\n    [59.369999, 59.639999, 58.52, 58.549999, 58.549999, 7400700,],\n    [59, 59.389999, 58.790001, 59.34, 59.34, 9079100,],\n    [59.669998, 59.709999, 58.439999, 59.119999, 59.119999, 6517300,],\n    [59.16, 59.279999, 58.360001, 58.419998, 58.419998, 6260000,],\n    [58.619999, 58.93, 58.32, 58.860001, 58.860001, 6174100,],\n    [59.18, 59.639999, 58.84, 59.619999, 59.619999, 5887600,],\n    [59.610001, 59.880001, 59.25, 59.48, 59.48, 6001900,],\n    [58.970001, 59.73, 58.59, 59.669998, 59.669998, 6023900,],\n    [59.240002, 59.369999, 57.810001, 58.02, 58.02, 9571200,],\n    [57.849998, 58.25, 57.580002, 58.040001, 58.040001, 6961800,],\n    [58.610001, 59.276001, 58.271, 59.060001, 59.060001, 7561800,],\n    [59.299999, 59.98, 59.23, 59.689999, 59.689999, 6483500,],\n    [59.950001, 60.700001, 59.599998, 60.290001, 60.290001, 5747000,],\n    [60.150002, 60.279999, 59.290001, 59.290001, 59.290001, 6744200,],\n    [59.360001, 59.82, 58.939999, 59.439999, 59.439999, 4653300,],\n    [59.330002, 59.650002, 58.755001, 59.400002, 59.400002, 4243200,],\n    [59.720001, 61, 59.439999, 60.84, 60.84, 5835700,],\n    [60.299999, 60.509998, 59.82, 60.049999, 60.049999, 4532000,],\n    [60.220001, 60.43, 59.110001, 60, 60, 4045300,],\n    [60.330002, 60.580002, 59.610001, 59.970001, 59.970001, 4087400,],\n    [60.310001, 60.529999, 59.810001, 60.529999, 60.529999, 4660600,],\n    [59.82, 61.16, 59.630001, 61.009998, 61.009998, 4359300,],\n    [61.049999, 61.860001, 60.889999, 61.77, 61.77, 5696000,],\n    [62, 62.028999, 61.169998, 61.68, 61.68, 6145800,],\n    [61.98, 62.23, 61.382999, 61.459999, 61.459999, 3440400,],\n    [61.259998, 61.75, 60.580002, 61.27, 61.27, 5501200,],\n    [61.740002, 61.990002, 60.900002, 61.240002, 61.240002, 5350900,],\n    [61.330002, 62.130001, 61.279999, 62, 62, 5022700,],\n    [61.939999, 62, 61.099998, 61.130001, 61.130001, 4942600,],\n    [61.73, 63.259998, 61.619999, 62.639999, 62.639999, 8266300,],\n    [62.950001, 63.119999, 62.150002, 62.560001, 62.560001, 6276600,],\n    [62.470001, 62.75, 61.580002, 62.040001, 62.040001, 6380900,],\n    [62.040001, 62.369999, 61.709999, 62.240002, 62.240002, 5697800,],\n    [62.27, 62.799999, 61.959999, 62.5, 62.5, 9940900,],\n    [62.619999, 63.529999, 62.52, 62.919998, 62.919998, 7688000,],\n    [63.009998, 63.924999, 62.959999, 63.830002, 63.830002, 7774000,],\n    [63.990002, 64.870003, 63.830002, 64.739998, 64.739998, 11903600,],\n    [64.669998, 64.949997, 63.904999, 64.629997, 64.629997, 6727300,],\n    [64.330002, 65.239998, 64.110001, 65.080002, 65.080002, 6743800,],\n    [65, 65, 62.365002, 63.5, 63.5, 13156900,],\n    [63.709999, 63.762001, 62.84, 62.939999, 62.939999, 8551900,],\n    [63.41, 63.75, 63.16, 63.330002, 63.330002, 7380700,],\n    [63.619999, 64.055, 63.110001, 63.93, 63.93, 4148000,],\n    [63.860001, 64.169998, 63.5, 64.029999, 64.029999, 6891300,],\n    [64.5, 65.120003, 64.099998, 64.18, 64.18, 5163300,],\n    [64.510002, 64.510002, 63.761002, 64.220001, 64.220001, 5633100,],\n    [64.300003, 64.300003, 63.689999, 64.010002, 64.010002, 4438800,],\n    [64.379997, 66, 64.220001, 65.82, 65.82, 7445700,],\n    [66, 66.410004, 65.790001, 66.050003, 66.050003, 6122000,],\n    [66.199997, 66.550003, 65.900002, 66.230003, 66.230003, 5517900,],\n    [66.599998, 66.669998, 65.790001, 66.040001, 66.040001, 5831800,],\n    [67.25, 68.419998, 66.980003, 67.779999, 67.779999, 12005600,],\n    [68.019997, 68.980003, 67.805, 68.860001, 68.860001, 8888300,],\n    [69.489998, 69.610001, 68, 68.660004, 68.660004, 8640700,],\n    [69.040001, 69.199997, 67.279999, 67.309998, 67.309998, 9581800,],\n    [67.650002, 67.669998, 66.349998, 66.669998, 66.669998, 10844000,],\n    [67.400002, 67.5, 67, 67.260002, 67.260002, 7994300,],\n    [67.300003, 67.449997, 66.160004, 67.25, 67.25, 14546400,],\n    [71.330002, 71.730003, 69.690002, 70.970001, 70.970001, 34282800,],\n    [71.019997, 71.330002, 69.550003, 69.800003, 69.800003, 12232500,],\n    [69.730003, 70.565002, 69.669998, 70.209999, 70.209999, 12280400,],\n    [69.940002, 71.419998, 69.849998, 71.019997, 71.019997, 12755800,],\n    [71.459999, 72.07, 71.040001, 71.339996, 71.339996, 8015100,],\n    [71.720001, 71.790001, 70.580002, 71.059998, 71.059998, 9256600,],\n    [71.449997, 71.540001, 70.529999, 71.150002, 71.150002, 7216000,],\n    [71.339996, 72.739998, 71.110001, 72.559998, 72.559998, 7555300,],\n    [72.779999, 72.989998, 71.690002, 72.379997, 72.379997, 6655600,],\n    [72.459999, 72.776001, 72.010002, 72.25, 72.25, 4535600,],\n    [72.370003, 73.410004, 71.940002, 73.389999, 73.389999, 6726400,],\n    [73.720001, 74.760002, 73.419998, 74.739998, 74.739998, 10156300,],\n    [75.169998, 75.449997, 74.190002, 74.410004, 74.410004, 7026600,],\n    [74, 75, 73.309998, 74.769997, 74.769997, 7593100,],\n    [74.019997, 74.199997, 72.410004, 74.099998, 74.099998, 8875500,],\n    [73.769997, 74.139999, 73.559998, 73.989998, 73.989998, 5714600,],\n    [73.610001, 74.290001, 73.339996, 74.029999, 74.029999, 5843600,],\n    [74.099998, 74.82, 73.620003, 74.489998, 74.489998, 6281500,],\n    [74.300003, 74.400002, 73.184998, 73.43, 73.43, 6232500,],\n    [75.5, 77.940002, 75.279999, 77.699997, 77.699997, 12856500,],\n    [78.010002, 78.010002, 75.800003, 76.379997, 76.379997, 11886700,],\n    [76.599998, 77.32, 75.879997, 76.010002, 76.010002, 6841800,],\n    [77.089996, 78.43, 76.849998, 77.769997, 77.769997, 10603100,],\n    [77.900002, 77.989998, 76.620003, 77.57, 77.57, 8073500,],\n    [77.809998, 78.900002, 77.699997, 78.57, 78.57, 4306600,],\n    [78.629997, 79.385002, 77.709999, 77.839996, 77.839996, 6780900,],\n    [77.949997, 78.230003, 77.244003, 77.790001, 77.790001, 8741500,],\n    [77.949997, 77.980003, 71.669998, 73.25, 73.25, 25202100,],\n    [73.769997, 75.870003, 73.540001, 75.730003, 75.730003, 15962000,],\n    [75.220001, 76.440002, 74.260002, 75.300003, 75.300003, 13387800,],\n    [75.589996, 75.744003, 68.610001, 70.970001, 70.970001, 26283600,],\n    [69.809998, 72.75, 69.610001, 71.199997, 71.199997, 16634000,],\n    [70.889999, 73.199997, 70.830002, 73.139999, 73.139999, 9331400,],\n    [73.25, 74.069, 73.25, 73.690002, 73.690002, 7937700,],\n    [74.709999, 74.709999, 72.599998, 72.910004, 72.910004, 8350400,],\n    [72.959999, 73.68, 72.559998, 73.290001, 73.290001, 6421900,],\n    [73.449997, 74.309998, 73, 73.620003, 73.620003, 6573500,],\n    [74.080002, 75.419998, 73.769997, 74.089996, 74.089996, 7196400,],\n    [74.5, 75.529999, 74.199997, 74.260002, 74.260002, 7519600,],\n    [74.82, 75.870003, 73.510002, 75.650002, 75.650002, 12543900,],\n    [76.300003, 76.349998, 75.199997, 75.32, 75.32, 8361100,],\n    [75.389999, 75.389999, 73.910004, 74.5, 74.5, 7753100,],\n    [74.639999, 74.900002, 73.760002, 74, 74, 6121300,],\n    [74.190002, 74.470001, 73.800003, 74.019997, 74.019997, 4763900,],\n    [73.800003, 74.040001, 72.900002, 73.889999, 73.889999, 3895000,],\n    [73.290001, 74.339996, 72.629997, 74.269997, 74.269997, 4919100,],\n    [74.25, 74.93, 74, 74.589996, 74.589996, 4461500,],\n    [74.959999, 75, 73.860001, 74.169998, 74.169998, 3810200,],\n\n]\n\nvar matrixt = [\n    [40.290001, 40.98, 40, 40.25, 40.25, 8247400, 1],\n    [40.349998, 41.029999, 40.044998, 41, 41, 6806400, 1],\n    [41.43, 41.720001, 41.040001, 41.060001, 41.060001, 6432000, 1],\n    [41.240002, 41.639999, 40.790001, 41.450001, 41.450001, 5586400, 1],\n    [41.490002, 41.509998, 41.110001, 41.400002, 41.400002, 3943900, 0],\n    [41.400002, 41.549999, 41.07, 41.080002, 41.080002, 4174900, 1],\n    [41.23, 41.380001, 40.834999, 41.279999, 41.279999, 4425300, 0],\n    [41.279999, 41.605, 40.919998, 41.560001, 41.560001, 3840500, 1],\n    [41.650002, 41.84, 41.529999, 41.599998, 41.599998, 3917700, 0],\n    [41.599998, 41.709999, 41.200001, 41.27, 41.27, 5932900, 1],\n    [41.41, 41.490002, 41.110001, 41.349998, 41.349998, 4706000, 0],\n    [41.25, 41.68, 41.029999, 41.27, 41.27, 4717600, 1],\n    [41.389999, 41.720001, 41.299999, 41.689999, 41.689999, 6868500, 1],\n    [41.860001, 42.110001, 41.25, 41.619999, 41.619999, 8497100, 1],\n    [41.950001, 42.040001, 41.529999, 41.959999, 41.959999, 6106500, 1],\n    [42.360001, 42.439999, 41.66, 41.709999, 41.709999, 8604000, 1],\n    [42.360001, 42.5, 41.285, 41.5, 41.5, 11838100, 0],\n    [41, 41.200001, 39.919998, 40.27, 40.27, 22749200, 0],\n    [40.169998, 40.27, 39.419998, 39.860001, 39.860001, 11486000, 0],\n    [39.700001, 40.009998, 39.450001, 39.779999, 39.779999, 9100100, 1],\n    [39.959999, 40, 39.110001, 39.310001, 39.310001, 8860400, 1],\n    [39.400002, 39.84, 39.02, 39.580002, 39.580002, 8736800, 1],\n    [39.790001, 39.93, 39.549999, 39.59, 39.59, 7131100, 1],\n    [39.639999, 39.830002, 39.34, 39.740002, 39.740002, 8206400, 1],\n    [40.009998, 40.34, 39.700001, 40.02, 40.02, 7956300, 1],\n    [40.18, 40.990002, 39.919998, 40.880001, 40.880001, 7399000, 0],\n    [40.439999, 40.994999, 40.299999, 40.830002, 40.830002, 6467600, 0],\n    [40.82, 40.860001, 40.560001, 40.580002, 40.580002, 6248200, 1],\n    [40.830002, 41.299999, 40.740002, 41.169998, 41.169998, 6260900, 1],\n    [41.18, 41.630001, 40.939999, 41.619999, 41.619999, 6496400, 1],\n    [41.689999, 41.93, 41.27, 41.869999, 41.869999, 7124600, 0],\n    [41.869999, 42.310001, 41.700001, 42.150002, 42.150002, 5730800, 0],\n    [41.919998, 42.299999, 41.799999, 41.959999, 41.959999, 5106000, 0],\n    [41.93, 42.560001, 41.900002, 42.43, 42.43, 5874700, 0],\n    [42.299999, 42.529999, 42.119999, 42.419998, 42.419998, 4316200, 0],\n    [42.369999, 42.669998, 42.16, 42.529999, 42.529999, 5456300, 0],\n    [42.110001, 43.07, 41.830002, 43.07, 43.07, 6769500, 0],\n    [42.889999, 42.889999, 42.349998, 42.639999, 42.639999, 5026700, 0],\n    [42.490002, 42.490002, 41.990002, 42, 42, 6956800, 1],\n    [42.310001, 42.52, 41.990002, 42.43, 42.43, 6003800, 0],\n    [42.400002, 42.860001, 42.200001, 42.77, 42.77, 4572300, 0],\n    [42.700001, 43.040001, 42.580002, 43.029999, 43.029999, 4214400, 0],\n    [42.98, 43.029999, 42.630001, 42.869999, 42.869999, 6032800, 0],\n    [42.799999, 43.200001, 42.709999, 42.889999, 42.889999, 4404700, 0],\n    [42.84, 43.18, 42.720001, 42.790001, 42.790001, 4573900, 0],\n    [42.66, 43, 42.450001, 42.919998, 42.919998, 3487900, 1],\n    [43.189999, 43.279999, 42.759998, 42.990002, 42.990002, 4636200, 0],\n    [42.869999, 42.965, 42.450001, 42.59, 42.59, 5526900, 0],\n    [42.509998, 42.639999, 41.740002, 42.099998, 42.099998, 5888000, 1],\n    [42.290001, 42.57, 41.889999, 42.389999, 42.389999, 4291800, 0],\n    [42.5, 42.580002, 42.139999, 42.400002, 42.400002, 3998600, 1],\n    [42.57, 43.299999, 42.369999, 43.080002, 43.080002, 12307900, 0],\n    [43.099998, 43.32, 42.810001, 43.16, 43.16, 6686900, 1],\n    [43.330002, 43.400002, 42.459999, 42.639999, 42.639999, 7758400, 0],\n    [42.595001, 43.240002, 42.450001, 43.189999, 43.189999, 6513300, 0],\n    [43.130001, 43.610001, 43, 43.139999, 43.139999, 7176400, 1],\n    [43.48, 43.494999, 42.935001, 43.130001, 43.130001, 5739500, 0],\n    [42.689999, 43.200001, 42.580002, 43.080002, 43.080002, 3850300, 0],\n    [42.869999, 43.25, 42.84, 43.150002, 43.150002, 4396500, 0],\n    [43.150002, 43.299999, 42.959999, 43.240002, 43.240002, 3951100, 0],\n    [43.150002, 43.799999, 43, 43.540001, 43.540001, 5691700, 0],\n    [43.439999, 43.48, 43.009998, 43.02, 43.02, 5177500, 1],\n    [43.200001, 43.299999, 42.509998, 42.630001, 42.630001, 7773000, 1],\n    [42.740002, 42.740002, 42.259998, 42.720001, 42.720001, 4681800, 1],\n    [42.830002, 43.342999, 42.740002, 42.889999, 42.889999, 5292300, 1],\n    [42.900002, 43, 42.720001, 42.900002, 42.900002, 5395400, 0],\n    [42.889999, 43.174999, 42.709999, 43.040001, 43.040001, 4861200, 1],\n    [43.07, 43.549999, 43.009998, 43.049999, 43.049999, 4579500, 0],\n    [42.990002, 43.09, 42.610001, 42.689999, 42.689999, 4856300, 0],\n    [42.099998, 42.810001, 42.060001, 42.490002, 42.490002, 5800100, 1],\n    [42.5, 42.889999, 42.32, 42.549999, 42.549999, 3631400, 1],\n    [42.599998, 43.139999, 42.599998, 43.099998, 43.099998, 3151600, 1],\n    [43.200001, 43.200001, 42.860001, 43.09, 43.09, 3711600, 0],\n    [43.029999, 43.470001, 42.900002, 43.299999, 43.299999, 4913900, 1],\n    [43.32, 43.799999, 43.259998, 43.689999, 43.689999, 4811200, 1],\n    [43.860001, 44, 43.599998, 43.810001, 43.810001, 5595700, 1],\n    [44.09, 44.279999, 43.950001, 44.27, 44.27, 4643800, 1],\n    [44.490002, 45.009998, 44.349998, 44.709999, 44.709999, 7827900, 1],\n    [45.040001, 45.040001, 44.25, 44.41, 44.41, 9846900, 1],\n    [47.25, 48.099998, 46.75, 47.150002, 47.150002, 34420200, 0],\n    [47.029999, 47.755001, 46.869999, 47.720001, 47.720001, 11642800, 0],\n    [47.389999, 47.713001, 47.32, 47.540001, 47.540001, 14537500, 0],\n    [47.41, 49.07, 47.400002, 49.049999, 49.049999, 16820800, 1],\n    [49.16, 49.290001, 48.625, 49.02, 49.02, 11613100, 0],\n    [48.93, 49.380001, 48.82, 48.91, 48.91, 7148800, 0],\n    [48.619999, 49.439999, 48.400002, 49.299999, 49.299999, 4876200, 1],\n    [49.43, 49.450001, 48.810001, 49.169998, 49.169998, 6641000, 1],\n    [49.060001, 49.369999, 48.900002, 49.220001, 49.220001, 4774000, 0],\n    [49.18, 49.799999, 49.014999, 49.790001, 49.790001, 6507700, 0],\n    [49.630001, 49.709999, 49.110001, 49.700001, 49.700001, 5547700, 0],\n    [49.580002, 49.75, 49.240002, 49.369999, 49.369999, 4933700, 0],\n    [49.310001, 50, 49.25, 49.77, 49.77, 4705900, 0],\n    [49.630001, 50.349998, 49.57, 50.34, 50.34, 5347200, 0],\n    [49.869999, 50.099998, 49.025002, 49.049999, 49.049999, 6598400, 0],\n    [49.029999, 49.580002, 48.889999, 49.110001, 49.110001, 9932100, 1],\n    [49.150002, 49.709999, 49.060001, 49.389999, 49.389999, 7813800, 1],\n    [49.450001, 49.880001, 49.349998, 49.77, 49.77, 13144900, 1],\n    [49.900002, 50.18, 49.77, 50.130001, 50.130001, 7134200, 0],\n    [50.23, 51.080002, 50.139999, 51.049999, 51.049999, 6274800, 0],\n    [50.77, 51.130001, 50.639999, 50.93, 50.93, 4950500, 1],\n    [51.040001, 51.389999, 50.889999, 51.189999, 51.189999, 4780800, 0],\n    [50.959999, 51.279999, 50.860001, 51.060001, 51.060001, 5550300, 1],\n    [51.130001, 52.240002, 50.880001, 52.209999, 52.209999, 11107200, 1],\n    [52.48, 53.389999, 52.474998, 53.16, 53.16, 13898300, 1],\n    [53.439999, 53.639999, 53.080002, 53.52, 53.52, 9121800, 1],\n    [53.77, 54.07, 53.59, 53.799999, 53.799999, 9656400, 0],\n    [53.75, 53.799999, 53.16, 53.400002, 53.400002, 6308000, 0],\n    [53.299999, 53.939999, 53.259998, 53.849998, 53.849998, 6368700, 1],\n    [54.029999, 54.43, 53.450001, 54.389999, 54.389999, 6369900, 1],\n    [54.650002, 55.139999, 52.849998, 53.400002, 53.400002, 11174100, 0],\n    [52.810001, 52.900002, 51.43, 52.16, 52.16, 15765600, 1],\n    [52.290001, 52.485001, 51.700001, 52.060001, 52.060001, 10411800, 0],\n    [52, 52.505001, 51.535, 51.900002, 51.900002, 7132500, 0],\n    [51.439999, 52.380001, 50.830002, 52.290001, 52.290001, 12401600, 0],\n    [52.040001, 52.16, 51.580002, 51.84, 51.84, 10931000, 1],\n    [52.279999, 53, 52.110001, 52.93, 52.93, 5643900, 0],\n    [52.84, 53.23, 52.43, 52.52, 52.52, 4578700, 1],\n    [52.990002, 53.580002, 52.610001, 53.540001, 53.540001, 8016500, 1],\n    [53.709999, 53.951, 52.860001, 53.869999, 53.869999, 9673000, 0],\n    [53.82, 54.529999, 53.689999, 54.330002, 54.330002, 6257300, 1],\n    [54.439999, 55.099998, 53.650002, 53.740002, 53.740002, 4890300, 0],\n    [53.599998, 53.790001, 52.639999, 52.73, 52.73, 7706800, 1],\n    [52.75, 54.439999, 52.650002, 54.389999, 54.389999, 7934300, 0],\n    [53.810001, 54.099998, 52.52, 53.419998, 53.419998, 11616200, 1],\n    [53.599998, 54.25, 53.290001, 53.669998, 53.669998, 8235000, 1],\n    [54.139999, 54.330002, 52.830002, 52.869999, 52.869999, 4831300, 1],\n    [53, 54.75, 52.939999, 54.610001, 54.610001, 9800600, 0],\n    [54.220001, 54.351002, 53.150002, 53.470001, 53.470001, 7447900, 1],\n    [53.700001, 54.48, 53.52, 53.970001, 53.970001, 4948100, 1],\n    [54.91, 55.419998, 54.700001, 54.939999, 54.939999, 10469600, 0],\n    [54.919998, 55.200001, 54.330002, 54.759998, 54.759998, 9011500, 1],\n    [56.599998, 57.445, 55.549999, 56.549999, 56.549999, 17490800, 1],\n    [57.299999, 57.91, 56.799999, 57.900002, 57.900002, 14795500, 1],\n    [58.139999, 58.630001, 56.915001, 57.16, 57.16, 11777100, 1],\n    [57.529999, 57.599998, 57.02, 57.580002, 57.580002, 5803300, 0],\n    [57.5, 58.959999, 57.310001, 58.959999, 58.959999, 9477500, 0],\n    [58.310001, 58.619999, 57.549999, 58.349998, 58.349998, 9706700, 1],\n    [58.75, 59.380001, 58.43, 59.09, 59.09, 8057400, 0],\n    [59, 59.330002, 58.59, 58.669998, 58.669998, 7545000, 1],\n    [58.900002, 59.07, 58.34, 58.580002, 58.580002, 6429300, 1],\n    [58.73, 58.830002, 58.189999, 58.259998, 58.259998, 8514000, 1],\n    [58.48, 58.939999, 57.900002, 58.790001, 58.790001, 13615600, 1],\n    [61, 61.299999, 57.692001, 60.150002, 60.150002, 22713400, 0],\n    [59.799999, 60.709999, 59.040001, 59.200001, 59.200001, 10800800, 1],\n    [59.369999, 59.639999, 58.52, 58.549999, 58.549999, 7400700, 1],\n    [59, 59.389999, 58.790001, 59.34, 59.34, 9079100, 1],\n    [59.669998, 59.709999, 58.439999, 59.119999, 59.119999, 6517300, 1],\n    [59.16, 59.279999, 58.360001, 58.419998, 58.419998, 6260000, 1],\n    [58.619999, 58.93, 58.32, 58.860001, 58.860001, 6174100, 1],\n    [59.18, 59.639999, 58.84, 59.619999, 59.619999, 5887600, 0],\n    [59.610001, 59.880001, 59.25, 59.48, 59.48, 6001900, 0],\n    [58.970001, 59.73, 58.59, 59.669998, 59.669998, 6023900, 0],\n    [59.240002, 59.369999, 57.810001, 58.02, 58.02, 9571200, 0],\n    [57.849998, 58.25, 57.580002, 58.040001, 58.040001, 6961800, 1],\n    [58.610001, 59.276001, 58.271, 59.060001, 59.060001, 7561800, 1],\n    [59.299999, 59.98, 59.23, 59.689999, 59.689999, 6483500, 1],\n    [59.950001, 60.700001, 59.599998, 60.290001, 60.290001, 5747000, 0],\n    [60.150002, 60.279999, 59.290001, 59.290001, 59.290001, 6744200, 1],\n    [59.360001, 59.82, 58.939999, 59.439999, 59.439999, 4653300, 0],\n    [59.330002, 59.650002, 58.755001, 59.400002, 59.400002, 4243200, 1],\n    [59.720001, 61, 59.439999, 60.84, 60.84, 5835700, 0],\n    [60.299999, 60.509998, 59.82, 60.049999, 60.049999, 4532000, 1],\n    [60.220001, 60.43, 59.110001, 60, 60, 4045300, 1],\n    [60.330002, 60.580002, 59.610001, 59.970001, 59.970001, 4087400, 1],\n    [60.310001, 60.529999, 59.810001, 60.529999, 60.529999, 4660600, 0],\n    [59.82, 61.16, 59.630001, 61.009998, 61.009998, 4359300, 1],\n    [61.049999, 61.860001, 60.889999, 61.77, 61.77, 5696000, 1],\n    [62, 62.028999, 61.169998, 61.68, 61.68, 6145800, 1],\n    [61.98, 62.23, 61.382999, 61.459999, 61.459999, 3440400, 0],\n    [61.259998, 61.75, 60.580002, 61.27, 61.27, 5501200, 1],\n    [61.740002, 61.990002, 60.900002, 61.240002, 61.240002, 5350900, 1],\n    [61.330002, 62.130001, 61.279999, 62, 62, 5022700, 0],\n    [61.939999, 62, 61.099998, 61.130001, 61.130001, 4942600, 1],\n    [61.73, 63.259998, 61.619999, 62.639999, 62.639999, 8266300, 1],\n    [62.950001, 63.119999, 62.150002, 62.560001, 62.560001, 6276600, 0],\n    [62.470001, 62.75, 61.580002, 62.040001, 62.040001, 6380900, 0],\n    [62.040001, 62.369999, 61.709999, 62.240002, 62.240002, 5697800, 1],\n    [62.27, 62.799999, 61.959999, 62.5, 62.5, 9940900, 1],\n    [62.619999, 63.529999, 62.52, 62.919998, 62.919998, 7688000, 1],\n    [63.009998, 63.924999, 62.959999, 63.830002, 63.830002, 7774000, 1],\n    [63.990002, 64.870003, 63.830002, 64.739998, 64.739998, 11903600, 0],\n    [64.669998, 64.949997, 63.904999, 64.629997, 64.629997, 6727300, 0],\n    [64.330002, 65.239998, 64.110001, 65.080002, 65.080002, 6743800, 0],\n    [65, 65, 62.365002, 63.5, 63.5, 13156900, 1],\n    [63.709999, 63.762001, 62.84, 62.939999, 62.939999, 8551900, 1],\n    [63.41, 63.75, 63.16, 63.330002, 63.330002, 7380700, 1],\n    [63.619999, 64.055, 63.110001, 63.93, 63.93, 4148000, 0],\n    [63.860001, 64.169998, 63.5, 64.029999, 64.029999, 6891300, 1],\n    [64.5, 65.120003, 64.099998, 64.18, 64.18, 5163300, 1],\n    [64.510002, 64.510002, 63.761002, 64.220001, 64.220001, 5633100, 1],\n    [64.300003, 64.300003, 63.689999, 64.010002, 64.010002, 4438800, 1],\n    [64.379997, 66, 64.220001, 65.82, 65.82, 7445700, 1],\n    [66, 66.410004, 65.790001, 66.050003, 66.050003, 6122000, 1],\n    [66.199997, 66.550003, 65.900002, 66.230003, 66.230003, 5517900, 1],\n    [66.599998, 66.669998, 65.790001, 66.040001, 66.040001, 5831800, 1],\n    [67.25, 68.419998, 66.980003, 67.779999, 67.779999, 12005600, 1],\n    [68.019997, 68.980003, 67.805, 68.860001, 68.860001, 8888300, 1],\n    [69.489998, 69.610001, 68, 68.660004, 68.660004, 8640700, 1],\n    [69.040001, 69.199997, 67.279999, 67.309998, 67.309998, 9581800, 1],\n    [67.650002, 67.669998, 66.349998, 66.669998, 66.669998, 10844000, 1],\n    [67.400002, 67.5, 67, 67.260002, 67.260002, 7994300, 1],\n    [67.300003, 67.449997, 66.160004, 67.25, 67.25, 14546400, 1],\n    [71.330002, 71.730003, 69.690002, 70.970001, 70.970001, 34282800, 1],\n    [71.019997, 71.330002, 69.550003, 69.800003, 69.800003, 12232500, 0],\n    [69.730003, 70.565002, 69.669998, 70.209999, 70.209999, 12280400, 0],\n    [69.940002, 71.419998, 69.849998, 71.019997, 71.019997, 12755800, 1],\n    [71.459999, 72.07, 71.040001, 71.339996, 71.339996, 8015100, 1],\n    [71.720001, 71.790001, 70.580002, 71.059998, 71.059998, 9256600, 1],\n    [71.449997, 71.540001, 70.529999, 71.150002, 71.150002, 7216000, 1],\n    [71.339996, 72.739998, 71.110001, 72.559998, 72.559998, 7555300, 1],\n    [72.779999, 72.989998, 71.690002, 72.379997, 72.379997, 6655600, 1],\n    [72.459999, 72.776001, 72.010002, 72.25, 72.25, 4535600, 1],\n    [72.370003, 73.410004, 71.940002, 73.389999, 73.389999, 6726400, 1],\n    [73.720001, 74.760002, 73.419998, 74.739998, 74.739998, 10156300, 1],\n    [75.169998, 75.449997, 74.190002, 74.410004, 74.410004, 7026600, 0],\n    [74, 75, 73.309998, 74.769997, 74.769997, 7593100, 1],\n    [74.019997, 74.199997, 72.410004, 74.099998, 74.099998, 8875500, 0],\n    [73.769997, 74.139999, 73.559998, 73.989998, 73.989998, 5714600, 0],\n    [73.610001, 74.290001, 73.339996, 74.029999, 74.029999, 5843600, 1],\n    [74.099998, 74.82, 73.620003, 74.489998, 74.489998, 6281500, 0],\n    [74.300003, 74.400002, 73.184998, 73.43, 73.43, 6232500, 1],\n    [75.5, 77.940002, 75.279999, 77.699997, 77.699997, 12856500, 1],\n    [78.010002, 78.010002, 75.800003, 76.379997, 76.379997, 11886700, 1],\n    [76.599998, 77.32, 75.879997, 76.010002, 76.010002, 6841800, 1],\n    [77.089996, 78.43, 76.849998, 77.769997, 77.769997, 10603100, 1],\n    [77.900002, 77.989998, 76.620003, 77.57, 77.57, 8073500, 1],\n    [77.809998, 78.900002, 77.699997, 78.57, 78.57, 4306600, 1],\n    [78.629997, 79.385002, 77.709999, 77.839996, 77.839996, 6780900, 1],\n    [77.949997, 78.230003, 77.244003, 77.790001, 77.790001, 8741500, 1],\n    [77.949997, 77.980003, 71.669998, 73.25, 73.25, 25202100, 1],\n    [73.769997, 75.870003, 73.540001, 75.730003, 75.730003, 15962000, 0],\n    [75.220001, 76.440002, 74.260002, 75.300003, 75.300003, 13387800, 1],\n    [75.589996, 75.744003, 68.610001, 70.970001, 70.970001, 26283600, 0],\n    [69.809998, 72.75, 69.610001, 71.199997, 71.199997, 16634000, 0],\n    [70.889999, 73.199997, 70.830002, 73.139999, 73.139999, 9331400, 1],\n    [73.25, 74.069, 73.25, 73.690002, 73.690002, 7937700, 1],\n    [74.709999, 74.709999, 72.599998, 72.910004, 72.910004, 8350400, 1],\n    [72.959999, 73.68, 72.559998, 73.290001, 73.290001, 6421900, 1],\n    [73.449997, 74.309998, 73, 73.620003, 73.620003, 6573500, 1],\n    [74.080002, 75.419998, 73.769997, 74.089996, 74.089996, 7196400, 1],\n    [74.5, 75.529999, 74.199997, 74.260002, 74.260002, 7519600, 1],\n    [74.82, 75.870003, 73.510002, 75.650002, 75.650002, 12543900, 1],\n    [76.300003, 76.349998, 75.199997, 75.32, 75.32, 8361100, 0],\n    [75.389999, 75.389999, 73.910004, 74.5, 74.5, 7753100, 1],\n    [74.639999, 74.900002, 73.760002, 74, 74, 6121300, 1],\n    [74.190002, 74.470001, 73.800003, 74.019997, 74.019997, 4763900, 0],\n    [73.800003, 74.040001, 72.900002, 73.889999, 73.889999, 3895000, 0],\n    [73.290001, 74.339996, 72.629997, 74.269997, 74.269997, 4919100, 0],\n    [74.25, 74.93, 74, 74.589996, 74.589996, 4461500, 1],\n    [74.959999, 75, 73.860001, 74.169998, 74.169998, 3810200, 0],\n]\n\nvar yt = [\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [1],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [1],\n    [0],\n    [0],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [0],\n    [0],\n    [1],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [0],\n    [1],\n    [0],\n    [0],\n    [1],\n    [1],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [1],\n    [1],\n    [0],\n    [1],\n    [0],\n    [0],\n    [0],\n    [1],\n    [0],\n    [1],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [0],\n    [0],\n    [1],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [0],\n    [0],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [1],\n    [0],\n    [1],\n    [1],\n    [0],\n    [0],\n    [0],\n    [1],\n    [0],\n]\n\ninit(matrix);\n\nfunction init(matrix) {\n\n    /**let X = math.evaluate('matrix[:, 1:2]', {\n        matrix,\n    });\n    let y = math.evaluate('matrix[:, 3]', {\n        matrix,\n    });*/\n\n    let m = y.length;\n    let n = X[0].length;\n\n    console.log(\"Part 1: \\n\");\n\n    X = math.concat(math.ones([m, 1]).valueOf(), X);\n\n    let theta = Array(n + 1).fill().map(() => [0]);\n    let cost = costFunction(theta, X, y);\n\n    console.log(\"cost: \", cost);\n    console.log(\"\\n\");\n\n    const ALPHA = 0.001;\n    const ITERATIONS = 500;\n\n    theta = [[-25], [0], [0]];\n    theta = gradientDescent(X, y, theta, ALPHA, ITERATIONS);\n\n    cost = costFunction(theta, X, y);\n\n    console.log('theta: ', theta);\n    console.log('\\n');\n    console.log('cost: ', cost);\n    console.log('\\n');\n\n    let studentVector = [1, 73.919998, 74.529999];\n    let prob = sigmoid(math.evaluate('studentVector * theta', {\n        studentVector,\n        theta,\n    }));\n\n    console.log('Predicted whether or not to buy ', prob);\n}\n\nfunction gradientDescent(X, y, theta, ALPHA, ITERATIONS) {\n\n    const m = y.length\n\n    for (let i = 0; i < ITERATIONS; i++) {\n        let h = sigmoid(math.evaluate(`X * theta`, {\n            X,\n            theta,\n        }));\n\n        theta = math.evaluate(`theta - ALPHA / m *((h-y)' * X)'`, {\n            theta,\n            ALPHA,\n            m,\n            X,\n            y,\n            h,\n        });\n    }\n    return theta;\n}\n\nfunction costFunction(theta, X, y) {\n\n    const m = y.length;\n\n    let h = sigmoid(math.evaluate(`X * theta`, {\n        X,\n        theta,\n    }));\n\n    const cost = math.evaluate(`(1/m) * (-y' * log(h) - (1-y)' * log(1-h))`, {\n        h,\n        y,\n        m,\n    });\n\n    return cost;\n}\n\nfunction sigmoid(z) {\n\n    let g = math.evaluate(`1 ./ (1 + e.^-z)`, {\n        z,\n    });\n\n    return g;\n}\n\nexport default class DraggableGraph extends React.Component {\n\n    render() {\n\n        const dataFive = {\n            labels: fiveLabel.labels,\n            datasets: [\n                {\n                    data: fiveActual.dataSet,\n                    label: 'Stock Price',\n                    backgroundColor: '#1C9CD3',\n                    borderColor: '#1C9CD3',\n                    fill: false,\n                    spanGaps: true,\n                    lineTension: 0,\n                    pointRadius: 1\n                },\n                {\n                    data: fiveMachine.dataSet,\n                    label: 'Machine\\'s predicitons',\n                    backgroundColor: '#195D81',\n                    borderColor: '#195D81',\n                    fill: false,\n                    spanGaps: true,\n                    lineTension: 0,\n                    pointRadius: 1\n                }\n            ],\n        };\n\n        const dataTen = {\n            labels: tenLabel.labels,\n            datasets: [\n                {\n                    data: tenActual.dataSet,\n                    label: 'Your Prediction',\n                    lineTension: 0,\n                    backgroundColor: '#1C9CD3',\n                    borderColor: '#1C9CD3',\n                    borderWidth: 2,\n                    fill: false,\n                    spanGaps: true,\n                    lineTension: 0\n                },\n                {\n                    data: tenMachine.dataSet,\n                    label: 'Machine\\'s predicitons',\n                    lineTension: 0,\n                    backgroundColor: '#195D81',\n                    borderColor: '#195D81',\n                    borderWidth: 2,\n                    fill: false,\n                    spanGaps: true,\n                    lineTension: 0\n                }\n            ],\n        };\n\n        const dataFifteen = {\n            labels: fifteenLabel.labels,\n            datasets: [\n                {\n                    data: fifteenActual.dataSet,\n                    label: 'Your Prediction',\n                    lineTension: 0,\n                    backgroundColor: '#1C9CD3',\n                    borderColor: '#1C9CD3',\n                    borderWidth: 2,\n                    fill: false,\n                    spanGaps: true,\n                    lineTension: 0\n                },\n                {\n                    data: fifteenMachine.dataSet,\n                    label: 'Machine\\'s predicitons',\n                    lineTension: 0,\n                    backgroundColor: '#195D81',\n                    borderColor: '#195D81',\n                    borderWidth: 2,\n                    fill: false,\n                    spanGaps: true,\n                    lineTension: 0\n                }\n            ],\n        };\n\n        return (\n            <body>\n                <div class=\"chartFormat\">\n                    <div class=\"fiveElement\" id=\"fiveElement\">\n                        <Line\n                            data={dataFive}\n                            options={options}\n                        />\n                    </div>\n                    <div class=\"tenElement\" id=\"tenElement\">\n                        <Line\n                            data={dataTen}\n                            options={options}\n                        />\n                    </div>\n                    <div class=\"fifteenElement\" id=\"fifteenElement\">\n                        <Line\n                            data={dataFifteen}\n                            options={options}\n                        />\n                    </div>\n                </div>\n                <button class=\"select\" onClick={() => cycleCharts()}>Next Chart</button>\n                <button class=\"python\" onClick={() => launchPythonScript()}>Logistic Regression</button>\n            </body>\n        );\n    }\n}\n\nvar increment = 1;\n\nfunction cycleCharts() {\n    if (increment == 1) {\n        document.getElementById('fiveElement').style.display = 'none'\n        document.getElementById('tenElement').style.display = 'block'\n        increment++;\n        return\n    }\n    else if (increment == 2) {\n        document.getElementById('tenElement').style.display = 'none'\n        document.getElementById('fifteenElement').style.display = 'block'\n        increment++;\n        return\n    }\n    else if (increment == 3) {\n        document.getElementById('fifteenElement').style.display = 'none'\n        document.getElementById('fiveElement').style.display = 'block'\n        increment = 1;\n        return\n    }\n}\n\nfunction launchPythonScript() {\n    //const { spawn } = require('child_process')\n    //const pythonScript = spawn('python', ['pythonLogistic.py'])\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz3.js",["230","231","232","233","234","235","236","237","238"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\n  import DragChart from '../TestingDragChart'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz3() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz3 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz3`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n   const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n                <form onClick={Quiz3}>\n                <h4><Link to=\"/modules/3/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/modulesSelectionDOM.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz6.js",["239","240","241","242","243","244","245","246","247"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\n  import DragChart from '../TestingDragChart'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz6() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz6 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz6`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n  const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\t\tQuiz 6\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n                <form onClick={Quiz6}>\n                <h4><Link to=\"/modules/6/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/modulesData.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/ChartSample.js",["248","249","250"],"import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-dragdata';\nimport './ChartSample.css';\n\nconst five = {\n    labels: ['January', 'February', 'March',\n        'April', 'May'],\n    datasets: [\n        {\n            label: 'Actual Price',\n            lineTension: 0,\n            backgroundColor: '#7ED2EF',\n            borderColor: '#7ED2EF',\n            borderWidth: 2,\n            data: [65, 59, 80, 81, 56],\n            fill: false,\n        },\n        {\n            label: 'Your Prediction',\n            lineTension: 0,\n            backgroundColor: '#1C9CD3',\n            borderColor: '#1C9CD3',\n            borderWidth: 2,\n            data: [15, 20, 70, 68, 65],\n            fill: false\n        },\n        {\n            label: 'Machine\\'s predicitons',\n            lineTension: 0,\n            backgroundColor: '#195D81',\n            borderColor: '#195D81',\n            borderWidth: 2,\n            data: [15, 25, 40, 50, 49],\n            fill: false\n\n        }\n    ]\n}\n\nconst tenOptions = {\n    options: {\n        scales: {\n            xAxes: [{\n                gridLines: { display: false, color: 'grey', },\n                ticks: { fontColor: '#3C3C3C', fontSize: 14, },\n            }],\n            yAxes: [{\n                scaleLabel: { display: true, labelString: 'Color Strength', fontSize: 14, },\n                ticks: {\n                    display: true,\n                    min: -5,\n                    max: 100,\n                    scaleSteps: 50,\n                    scaleStartValue: -50,\n                    maxTicksLimit: 4,\n                    fontColor: '#9B9B9B',\n                    padding: 30,\n                    callback: point => (point < 0 ? '' : point),\n                }\n            }],\n        },\n        maintainAspectRatio: false,\n        responsive: true\n    }\n}\n\nconst ten = {\n    labels: ['January', 'February', 'March',\n        'April', 'May', 'June', 'July', 'August', 'September', 'October'],\n    datasets: [\n        {\n            label: 'Actual Price',\n            lineTension: 0,\n            backgroundColor: '#7ED2EF',\n            borderColor: '#7ED2EF',\n            borderWidth: 2,\n            data: [65, 59, 80, 81, 56, 50, 40, 45, 55, 60],\n            fill: false,\n        },\n        {\n            label: 'Your Prediction',\n            lineTension: 0,\n            backgroundColor: '#1C9CD3',\n            borderColor: '#1C9CD3',\n            borderWidth: 2,\n            data: [15, 20, 70, 68, 65, 55, 42, 40, 45, 55],\n            fill: false\n        },\n        {\n            label: 'Machine\\'s predicitons',\n            lineTension: 0,\n            backgroundColor: '#195D81',\n            borderColor: '#195D81',\n            borderWidth: 2,\n            data: [15, 25, 40, 50, 49, 50, 55, 50, 55, 50],\n            fill: false\n\n        }\n    ]\n}\n\nconst fifteen = {\n    labels: ['January', 'February', 'March',\n        'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'January', 'February', 'March'],\n    datasets: [\n        {\n            label: 'Actual Price',\n            lineTension: 0,\n            backgroundColor: '#7ED2EF',\n            borderColor: '#7ED2EF',\n            borderWidth: 2,\n            data: [65, 59, 80, 81, 56, 50, 40, 45, 55, 60, 70, 75, 70, 62, 60],\n            fill: false,\n        },\n        {\n            label: 'Your Prediction',\n            lineTension: 0,\n            backgroundColor: '#1C9CD3',\n            borderColor: '#1C9CD3',\n            borderWidth: 2,\n            data: [15, 20, 70, 68, 65, 55, 42, 40, 45, 55, 60, 65, 70, 78, 79],\n            fill: false\n        },\n        {\n            label: 'Machine\\'s predicitons',\n            lineTension: 0,\n            backgroundColor: '#195D81',\n            borderColor: '#195D81',\n            borderWidth: 2,\n            data: [15, 25, 40, 50, 49, 50, 55, 50, 55, 50, 68, 71, 78, 80, 75],\n            fill: false\n\n        }\n    ]\n}\nexport default class ChartSample extends React.Component {\n    render() {\n        return (\n            <body class=\"formattingTest\">\n                <div className=\"chartFormat\">\n                    <div className=\"fiveElement\" id=\"fiveElement\">\n                        <Line className=\"testing\"\n                            data={five}\n                            options={{\n                                title: {\n                                    display: true,\n                                    text: 'Stock price',\n                                    fontSize: 20\n                                },\n                                legend: {\n                                    display: true,\n                                    position: 'right'\n                                },\n                                layout: {\n                                },\n                                maintainAspectRatio: false,\n                                responsive: true\n\n                            }}\n                        />\n                    </div>\n                    <div className=\"tenElement\" id=\"tenElement\">\n                        <Line className=\"testing2\"\n                            data={ten}\n                            options={tenOptions}\n                        />\n                    </div>\n                    <div className = \"fifteenElement\" id=\"fifteenElement\">\n                        <Line className=\"testing3\"\n                            data={fifteen}\n                            options={{\n                                title: {\n                                    display: true,\n                                    text: 'Stock price',\n                                    fontSize: 20\n                                },\n                                legend: {\n                                    display: true,\n                                    position: 'right'\n                                },\n                                layout: {\n                                    padding: {\n                                        top: 0,\n                                        bottom: 0,\n                                        right: 0,\n                                        left: 0\n                                    }\n                                },\n                                maintainAspectRatio: false,\n                                responsive: true\n\n                            }}\n                            />\n                    </div>\n                </div>\n                <button class=\"select\" onClick={() => cycleCharts()}>Next Chart</button>\n            </body>\n        );\n    }\n}\n\n/**function down_handler(event) {\n    // check for data point near event location\n    const points = document.getElementById('testing2').getElementAtEvent(event, { intersect: false });\n    if (points.length > 0) {\n        // grab nearest point, start dragging\n        activePoint = points[0];\n        canvas.onpointermove = move_handler;\n    };\n};\n\nfunction up_handler(event) {\n    // release grabbed point, stop dragging\n    activePoint = null;\n    canvas.onpointermove = null;\n};\n\nfunction move_handler(event) {\n    // locate grabbed point in chart data\n    if (activePoint != null) {\n        var data = activePoint._chart.data;\n        var datasetIndex = activePoint._datasetIndex;\n\n        // read mouse position\n        const helpers = Line.helpers;\n        var position = helpers.getRelativePosition(event, document.getElementById('testing'));\n\n        // convert mouse position to chart y axis value \n        var chartArea = document.getElementById('testing2').chartArea;\n        var yAxis = document.getElementById('testing2').scales[\"y-axis-0\"];\n        var yValue = map(position.y, chartArea.bottom, chartArea.top, yAxis.min, yAxis.max);\n\n        // update y value of active data point\n        data.datasets[datasetIndex].data[activePoint._index] = yValue;\n        window.myChart.update();\n    };\n};\n\n// map value to other coordinate system\nfunction map(value, start1, stop1, start2, stop2) {\n    return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1))\n};**/\n\nvar increment = 1;\n\nfunction cycleCharts() {\n    if (increment == 1) {\n        document.getElementById('fiveElement').style.display = 'none'\n        document.getElementById('tenElement').style.display = 'block'\n        increment++;\n        return\n    }\n    else if (increment == 2) {\n        document.getElementById('tenElement').style.display = 'none'\n        document.getElementById('fifteenElement').style.display = 'block'\n        increment++;\n        return\n    }\n    else if (increment == 3) {\n        document.getElementById('fifteenElement').style.display = 'none'\n        document.getElementById('fiveElement').style.display = 'block'\n        increment = 1;\n        return\n    }\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/quizzes/Quiz1.js",["251","252","253","254","255","256","257","258","259","260"],"import { CredentialsContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    Redirect\n  } from \"react-router-dom\";\nimport DragChart from '../TestingDragChart'\nimport {modulesData} from '../../components/modulesData'\n\nexport const handleErrors = async (response) => {\n  if (!response.ok) {\n    const { message } = await response.json();\n    throw Error(message);\n  }\n  return response.json();\n};\n\nexport default function Quiz1() {\n  const [credentials, setCredentials] = useContext(CredentialsContext);\n  const [username, setUsername] = useState(credentials && credentials.username);\n  const [module, setModule] = useState(\"100\"); \n  const [error, setError] = useState(\"\");\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tvar tokens = 0;\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n  const Quiz1 = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:4000/Quiz1`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        module,\n      }),\n    })\n      .then(handleErrors)\n      .then(() => {\n        setCredentials({\n          username,\n          module,\n        });\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n  const history = useHistory();\n\n\treturn (\n        <>\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n                <>\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length} <br/>\n\t\t\t\t\tYou earned {tokens = tokens + score * 5} tokens\n\t\t\t\t</div>\n\t\t\t\t<div className=\"credits\">\n                        {/* <p className=\"credits_earnable\" id=\"credits_earnable\">Credits you can earn: 4</p> */}\n                        <p className=\"credits_total\" id=\"credits_total\"> Total tokens: {tokens}</p>\n                </div>\n\t\t\t\t<form onClick={Quiz1}>\n                <h4><Link to=\"/modules/1/0\">Next Module</Link></h4>\n\t\t\t\t</form>\n                </>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<h2 align=\"center\">Quiz 1</h2>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div> <br/>\n        <DragChart/>\n        </>\n\t);\n}","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/moduleProgress.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/App.js",["261","262","263","264"],"import React, { useState } from \"react\";\nimport './App.css';\nimport Home from './pages/Home';\nimport Welcome from './pages/Welcome';\nimport Modules from './pages/Modules';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Help from './pages/Help';\nimport Quiz1 from './components/quizzes/Quiz1'\nimport Quiz2 from './components/quizzes/Quiz2'\nimport Quiz3 from './components/quizzes/Quiz3'\nimport Quiz4 from './components/quizzes/Quiz4'\nimport Quiz5 from './components/quizzes/Quiz5'\nimport Quiz6 from './components/quizzes/Quiz6'\nimport Quiz7 from './components/quizzes/Quiz7'\nimport Quiz8 from './components/quizzes/Quiz8'\n\nimport { render } from 'react-dom';\nimport { IndexRoute, hashHistory } from 'react-router';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nexport const CredentialsContext = React.createContext();\n\nfunction App() {\n  const credentialsState = useState(null);\n\n  return (\n    <div className=\"app\">\n     <CredentialsContext.Provider value={credentialsState}>\n      <Router>\n\n      <div className=\"navigation\">\n        <h2>CODEVA</h2>\n        <div className=\"links\">\n          <Link to=\"/\">Welcome</Link>\n          <Link to=\"/modules\">Modules</Link>\n        </div>\n      </div>\n      \n      <Switch>\n\n\n      <Route path=\"/quiz1\">\n          <Quiz1/>\n      </Route>\n      <Route path=\"/quiz2\">\n          <Quiz2/>\n      </Route>\n      <Route path=\"/quiz3\">\n          <Quiz3/>\n      </Route>\n      <Route path=\"/quiz4\">\n          <Quiz4/>\n      </Route>\n      <Route path=\"/quiz5\">\n          <Quiz5/>\n      </Route>\n      <Route path=\"/quiz6\">\n          <Quiz6/>\n      </Route>\n      <Route path=\"/quiz7\">\n          <Quiz7/>\n      </Route>\n      <Route path=\"/quiz8\">\n          <Quiz8/>\n      </Route>\n      \n      <Route path=\"/help\">\n          <Help/>\n      </Route>\n\n        <Route path=\"/modules\">\n          <Modules />\n        </Route>\n\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/Register\">\n          <Register />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Welcome />\n        </Route>\n\n      </Switch>\n      \n      </Router>\n      </CredentialsContext.Provider>\n      <div className=\"footer\">\n        footer area\n      </div>\n    \n    </div>\n  )\n}\n\n\nexport default App;\n","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/progressBar.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/ModuleProgress.js",["265","266","267"],"import React, { useState, useEffect } from \"react\";\nimport ProgressBar from \"./progressBar\";\nimport '../components/progress.css'\nimport { Link } from \"react-router-dom\";\n\n\nconst ModuleProgress = (props) => {\n    const [value, setValue] = useState(props.m1);\n\n    // useEffect(() => {\n    //     const interval = setInterval(() => {\n    //     setValue(oldValue => {\n    //         const newValue = oldValue + 10;\n\n    //         if (newValue === 100) {\n    //         clearInterval(interval);\n    //         }\n\n    //         return newValue;\n    //     });\n    //     }, 1000);\n    // }, []);\n\n    return (\n        <>\n        <div id=\"progress\" align=\"center\">\n            <h2>PROGRESS:</h2>\n            <Link to=\"/modules/0\">Module 1:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m1} max={100} />\n            <Link to=\"/modules/1\">Module 2:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m2} max={100} />\n            <Link to=\"/modules/2\">Module 3:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m3} max={100} />\n            <Link to=\"/modules/3\">Module 4:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m4} max={100} />\n            <Link to=\"/modules/4\">Module 5:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m5} max={100} />\n            <Link to=\"/modules/5\">Module 6:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m6} max={100} />\n            <Link to=\"/modules/6\">Module 7:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m7} max={100} />\n            <Link to=\"/modules/7\">Module 8:</Link> <ProgressBar color={\"#ff7979\"} width={\"150px\"} value={props.m8} max={100} />\n            {/* </div> */}\n        </div>\n        </>\n    )\n}\n\nexport default ModuleProgress","/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/ModuleNavHeader.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/NextModuleButton.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/serviceWorker.js",[],"/Users/arafrahman/Desktop/VCU Stock Market Prediction/econ-learning/src/components/PrevModuleButton.js",[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":27},{"ruleId":"272","severity":1,"message":"276","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":13},{"ruleId":"268","replacedBy":"277"},{"ruleId":"270","replacedBy":"278"},{"ruleId":"268","replacedBy":"279"},{"ruleId":"270","replacedBy":"280"},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"287","line":25,"column":20,"nodeType":"274","messageId":"275","endLine":25,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":26,"column":18,"nodeType":"274","messageId":"275","endLine":26,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":27,"column":10,"nodeType":"274","messageId":"275","endLine":27,"endColumn":15},{"ruleId":"268","replacedBy":"290"},{"ruleId":"270","replacedBy":"291"},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"287","line":24,"column":20,"nodeType":"274","messageId":"275","endLine":24,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":25,"column":18,"nodeType":"274","messageId":"275","endLine":25,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":26,"column":10,"nodeType":"274","messageId":"275","endLine":26,"endColumn":15},{"ruleId":"268","replacedBy":"292"},{"ruleId":"270","replacedBy":"293"},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"287","line":24,"column":20,"nodeType":"274","messageId":"275","endLine":24,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":25,"column":18,"nodeType":"274","messageId":"275","endLine":25,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":26,"column":10,"nodeType":"274","messageId":"275","endLine":26,"endColumn":15},{"ruleId":"272","severity":1,"message":"282","line":6,"column":3,"nodeType":"274","messageId":"275","endLine":6,"endColumn":9},{"ruleId":"272","severity":1,"message":"283","line":7,"column":3,"nodeType":"274","messageId":"275","endLine":7,"endColumn":8},{"ruleId":"272","severity":1,"message":"285","line":10,"column":3,"nodeType":"274","messageId":"275","endLine":10,"endColumn":16},{"ruleId":"294","severity":1,"message":"295","line":49,"column":13,"nodeType":"296","endLine":49,"endColumn":96},{"ruleId":"268","replacedBy":"297"},{"ruleId":"270","replacedBy":"298"},{"ruleId":"272","severity":1,"message":"299","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"281","line":1,"column":39,"nodeType":"274","messageId":"275","endLine":1,"endColumn":48},{"ruleId":"294","severity":1,"message":"295","line":36,"column":51,"nodeType":"296","endLine":36,"endColumn":116},{"ruleId":"272","severity":1,"message":"273","line":2,"column":17,"nodeType":"274","messageId":"275","endLine":2,"endColumn":27},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"287","line":25,"column":20,"nodeType":"274","messageId":"275","endLine":25,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":26,"column":18,"nodeType":"274","messageId":"275","endLine":26,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":27,"column":10,"nodeType":"274","messageId":"275","endLine":27,"endColumn":15},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"287","line":24,"column":20,"nodeType":"274","messageId":"275","endLine":24,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":25,"column":18,"nodeType":"274","messageId":"275","endLine":25,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":26,"column":10,"nodeType":"274","messageId":"275","endLine":26,"endColumn":15},{"ruleId":"268","replacedBy":"300"},{"ruleId":"270","replacedBy":"301"},{"ruleId":"272","severity":1,"message":"302","line":575,"column":5,"nodeType":"274","messageId":"275","endLine":575,"endColumn":12},{"ruleId":"303","severity":1,"message":"304","line":864,"column":23,"nodeType":"305","messageId":"306","endLine":864,"endColumn":25},{"ruleId":"307","severity":1,"message":"308","line":901,"column":14,"nodeType":"274","messageId":"309","endLine":901,"endColumn":15},{"ruleId":"272","severity":1,"message":"310","line":937,"column":5,"nodeType":"274","messageId":"275","endLine":937,"endColumn":7},{"ruleId":"272","severity":1,"message":"311","line":1191,"column":5,"nodeType":"274","messageId":"275","endLine":1191,"endColumn":12},{"ruleId":"272","severity":1,"message":"312","line":1444,"column":5,"nodeType":"274","messageId":"275","endLine":1444,"endColumn":7},{"ruleId":"313","severity":1,"message":"314","line":1834,"column":21,"nodeType":"315","messageId":"306","endLine":1834,"endColumn":32},{"ruleId":"313","severity":1,"message":"314","line":1845,"column":21,"nodeType":"315","messageId":"306","endLine":1845,"endColumn":32},{"ruleId":"313","severity":1,"message":"314","line":1862,"column":21,"nodeType":"315","messageId":"306","endLine":1862,"endColumn":32},{"ruleId":"313","severity":1,"message":"314","line":1873,"column":21,"nodeType":"315","messageId":"306","endLine":1873,"endColumn":32},{"ruleId":"303","severity":1,"message":"316","line":1910,"column":19,"nodeType":"305","messageId":"306","endLine":1910,"endColumn":21},{"ruleId":"303","severity":1,"message":"316","line":1916,"column":24,"nodeType":"305","messageId":"306","endLine":1916,"endColumn":26},{"ruleId":"303","severity":1,"message":"316","line":1922,"column":24,"nodeType":"305","messageId":"306","endLine":1922,"endColumn":26},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"287","line":24,"column":20,"nodeType":"274","messageId":"275","endLine":24,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":25,"column":18,"nodeType":"274","messageId":"275","endLine":25,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":26,"column":10,"nodeType":"274","messageId":"275","endLine":26,"endColumn":15},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"287","line":24,"column":20,"nodeType":"274","messageId":"275","endLine":24,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":25,"column":18,"nodeType":"274","messageId":"275","endLine":25,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":26,"column":10,"nodeType":"274","messageId":"275","endLine":26,"endColumn":15},{"ruleId":"303","severity":1,"message":"316","line":248,"column":19,"nodeType":"305","messageId":"306","endLine":248,"endColumn":21},{"ruleId":"303","severity":1,"message":"316","line":254,"column":24,"nodeType":"305","messageId":"306","endLine":254,"endColumn":26},{"ruleId":"303","severity":1,"message":"316","line":260,"column":24,"nodeType":"305","messageId":"306","endLine":260,"endColumn":26},{"ruleId":"272","severity":1,"message":"281","line":3,"column":39,"nodeType":"274","messageId":"275","endLine":3,"endColumn":48},{"ruleId":"272","severity":1,"message":"282","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":5,"endColumn":11},{"ruleId":"272","severity":1,"message":"283","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":10},{"ruleId":"272","severity":1,"message":"284","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"285","line":9,"column":5,"nodeType":"274","messageId":"275","endLine":9,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":10,"column":5,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"317","line":13,"column":9,"nodeType":"274","messageId":"275","endLine":13,"endColumn":20},{"ruleId":"272","severity":1,"message":"287","line":25,"column":20,"nodeType":"274","messageId":"275","endLine":25,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":26,"column":18,"nodeType":"274","messageId":"275","endLine":26,"endColumn":27},{"ruleId":"272","severity":1,"message":"289","line":27,"column":10,"nodeType":"274","messageId":"275","endLine":27,"endColumn":15},{"ruleId":"272","severity":1,"message":"318","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":12},{"ruleId":"272","severity":1,"message":"319","line":18,"column":10,"nodeType":"274","messageId":"275","endLine":18,"endColumn":16},{"ruleId":"272","severity":1,"message":"320","line":19,"column":10,"nodeType":"274","messageId":"275","endLine":19,"endColumn":20},{"ruleId":"272","severity":1,"message":"321","line":19,"column":22,"nodeType":"274","messageId":"275","endLine":19,"endColumn":33},{"ruleId":"272","severity":1,"message":"281","line":1,"column":27,"nodeType":"274","messageId":"275","endLine":1,"endColumn":36},{"ruleId":"272","severity":1,"message":"322","line":8,"column":12,"nodeType":"274","messageId":"275","endLine":8,"endColumn":17},{"ruleId":"272","severity":1,"message":"323","line":8,"column":19,"nodeType":"274","messageId":"275","endLine":8,"endColumn":27},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Chart' is defined but never used.",["324"],["325"],["324"],["325"],"'useEffect' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'Redirect' is defined but never used.","'setUsername' is assigned a value but never used.","'setModule' is assigned a value but never used.","'error' is assigned a value but never used.",["324"],["325"],["324"],["325"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["324"],["325"],"'useState' is defined but never used.",["324"],["325"],"'numbers' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'v' is already defined.","redeclared","'Xt' is assigned a value but never used.","'matrixt' is assigned a value but never used.","'yt' is assigned a value but never used.","no-dupe-keys","Duplicate key 'lineTension'.","ObjectExpression","Expected '===' and instead saw '=='.","'modulesData' is defined but never used.","'Home' is defined but never used.","'render' is defined but never used.","'IndexRoute' is defined but never used.","'hashHistory' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]